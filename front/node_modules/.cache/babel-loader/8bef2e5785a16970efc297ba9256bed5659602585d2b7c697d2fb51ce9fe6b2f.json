{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  NlgManager: NlgManagerBase\n} = require('@nlpjs/nlg');\nconst {\n  Evaluator\n} = require('@nlpjs/evaluator');\nclass NlgManager extends NlgManagerBase {\n  constructor() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let container = arguments.length > 1 ? arguments[1] : undefined;\n    super(settings, container);\n    this.container.register('Evaluator', Evaluator, true);\n  }\n  addAnswer(locale, intent, answer, opts) {\n    return this.add(locale, intent, answer, opts);\n  }\n  async findAnswer(locale, intent, context, settings) {\n    const answer = await this.find(locale, intent, context, settings);\n    if (!answer.answer) {\n      return undefined;\n    }\n    return {\n      response: answer.answer\n    };\n  }\n  removeAnswer(locale, intent, answer, opts) {\n    return this.remove(locale, intent, answer, opts);\n  }\n  isValid(condition, context) {\n    const evaluator = this.container.get('Evaluator');\n    if (evaluator) {\n      return !condition || condition === '' || evaluator.evaluate(condition, context) === true;\n    }\n    return true;\n  }\n  findAllAnswers(locale, intent, context) {\n    if (typeof locale === 'string') {\n      const input = {\n        locale,\n        intent,\n        context\n      };\n      const found = super.findAllAnswers(input);\n      const filtered = super.filterAnswers(found);\n      return filtered.answers.map(x => ({\n        response: x.answer,\n        opts: x.opts\n      }));\n    }\n    return super.findAllAnswers(locale);\n  }\n}\nmodule.exports = NlgManager;","map":{"version":3,"names":["NlgManager","NlgManagerBase","require","Evaluator","constructor","settings","arguments","length","undefined","container","register","addAnswer","locale","intent","answer","opts","add","findAnswer","context","find","response","removeAnswer","remove","isValid","condition","evaluator","get","evaluate","findAllAnswers","input","found","filtered","filterAnswers","answers","map","x","module","exports"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/moteur-rech/node_modules/node-nlp/src/nlg/nlg-manager.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { NlgManager: NlgManagerBase } = require('@nlpjs/nlg');\nconst { Evaluator } = require('@nlpjs/evaluator');\n\nclass NlgManager extends NlgManagerBase {\n  constructor(settings = {}, container) {\n    super(settings, container);\n    this.container.register('Evaluator', Evaluator, true);\n  }\n\n  addAnswer(locale, intent, answer, opts) {\n    return this.add(locale, intent, answer, opts);\n  }\n\n  async findAnswer(locale, intent, context, settings) {\n    const answer = await this.find(locale, intent, context, settings);\n    if (!answer.answer) {\n      return undefined;\n    }\n    return {\n      response: answer.answer,\n    };\n  }\n\n  removeAnswer(locale, intent, answer, opts) {\n    return this.remove(locale, intent, answer, opts);\n  }\n\n  isValid(condition, context) {\n    const evaluator = this.container.get('Evaluator');\n    if (evaluator) {\n      return (\n        !condition ||\n        condition === '' ||\n        evaluator.evaluate(condition, context) === true\n      );\n    }\n    return true;\n  }\n\n  findAllAnswers(locale, intent, context) {\n    if (typeof locale === 'string') {\n      const input = {\n        locale,\n        intent,\n        context,\n      };\n      const found = super.findAllAnswers(input);\n      const filtered = super.filterAnswers(found);\n      return filtered.answers.map((x) => ({\n        response: x.answer,\n        opts: x.opts,\n      }));\n    }\n    return super.findAllAnswers(locale);\n  }\n}\n\nmodule.exports = NlgManager;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA,UAAU,EAAEC;AAAe,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AAC5D,MAAM;EAAEC;AAAU,CAAC,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAEjD,MAAMF,UAAU,SAASC,cAAc,CAAC;EACtCG,WAAWA,CAAA,EAA2B;IAAA,IAA1BC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,SAAS,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAClC,KAAK,CAACH,QAAQ,EAAEI,SAAS,CAAC;IAC1B,IAAI,CAACA,SAAS,CAACC,QAAQ,CAAC,WAAW,EAAEP,SAAS,EAAE,IAAI,CAAC;EACvD;EAEAQ,SAASA,CAACC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAE;IACtC,OAAO,IAAI,CAACC,GAAG,CAACJ,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,CAAC;EAC/C;EAEA,MAAME,UAAUA,CAACL,MAAM,EAAEC,MAAM,EAAEK,OAAO,EAAEb,QAAQ,EAAE;IAClD,MAAMS,MAAM,GAAG,MAAM,IAAI,CAACK,IAAI,CAACP,MAAM,EAAEC,MAAM,EAAEK,OAAO,EAAEb,QAAQ,CAAC;IACjE,IAAI,CAACS,MAAM,CAACA,MAAM,EAAE;MAClB,OAAON,SAAS;IAClB;IACA,OAAO;MACLY,QAAQ,EAAEN,MAAM,CAACA;IACnB,CAAC;EACH;EAEAO,YAAYA,CAACT,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAE;IACzC,OAAO,IAAI,CAACO,MAAM,CAACV,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,CAAC;EAClD;EAEAQ,OAAOA,CAACC,SAAS,EAAEN,OAAO,EAAE;IAC1B,MAAMO,SAAS,GAAG,IAAI,CAAChB,SAAS,CAACiB,GAAG,CAAC,WAAW,CAAC;IACjD,IAAID,SAAS,EAAE;MACb,OACE,CAACD,SAAS,IACVA,SAAS,KAAK,EAAE,IAChBC,SAAS,CAACE,QAAQ,CAACH,SAAS,EAAEN,OAAO,CAAC,KAAK,IAAI;IAEnD;IACA,OAAO,IAAI;EACb;EAEAU,cAAcA,CAAChB,MAAM,EAAEC,MAAM,EAAEK,OAAO,EAAE;IACtC,IAAI,OAAON,MAAM,KAAK,QAAQ,EAAE;MAC9B,MAAMiB,KAAK,GAAG;QACZjB,MAAM;QACNC,MAAM;QACNK;MACF,CAAC;MACD,MAAMY,KAAK,GAAG,KAAK,CAACF,cAAc,CAACC,KAAK,CAAC;MACzC,MAAME,QAAQ,GAAG,KAAK,CAACC,aAAa,CAACF,KAAK,CAAC;MAC3C,OAAOC,QAAQ,CAACE,OAAO,CAACC,GAAG,CAAEC,CAAC,KAAM;QAClCf,QAAQ,EAAEe,CAAC,CAACrB,MAAM;QAClBC,IAAI,EAAEoB,CAAC,CAACpB;MACV,CAAC,CAAC,CAAC;IACL;IACA,OAAO,KAAK,CAACa,cAAc,CAAChB,MAAM,CAAC;EACrC;AACF;AAEAwB,MAAM,CAACC,OAAO,GAAGrC,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}