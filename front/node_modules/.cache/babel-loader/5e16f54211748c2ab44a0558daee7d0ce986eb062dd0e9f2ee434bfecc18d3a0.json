{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  Clonable\n} = require('@nlpjs/core');\nconst {\n  Language\n} = require('@nlpjs/language-min');\nconst DomainManager = require('./domain-manager');\nclass NluManager extends Clonable {\n  constructor() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let container = arguments.length > 1 ? arguments[1] : undefined;\n    super({\n      settings: {},\n      container: settings.container || container\n    }, container);\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = 'nlu-manager';\n    }\n    this.registerDefault();\n    this.applySettings(this.settings, this.container.getConfiguration(this.settings.tag));\n    if (!this.container.get('Language')) {\n      this.container.register('Language', Language, false);\n    }\n    this.guesser = this.container.get('Language');\n    this.locales = [];\n    this.languageNames = {};\n    this.domainManagers = {};\n    this.intentDomains = {};\n    if (this.settings.locales) {\n      this.addLanguage(this.settings.locales);\n    }\n    this.applySettings(this, {\n      pipelineTrain: this.getPipeline(`${this.settings.tag}-train`),\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`)\n    });\n  }\n  registerDefault() {\n    this.container.registerConfiguration('nlu-manager', {}, false);\n    this.container.registerPipeline('nlu-manager-train', ['.innerTrain'], false);\n  }\n  describeLanguage(locale, name) {\n    this.languageNames[locale] = {\n      locale,\n      name\n    };\n  }\n  addLanguage(srcLocales) {\n    if (srcLocales) {\n      const locales = Array.isArray(srcLocales) ? srcLocales : [srcLocales];\n      for (let i = 0; i < locales.length; i += 1) {\n        const locale = locales[i].substr(0, 2).toLowerCase();\n        if (!this.locales.includes(locale)) {\n          this.locales.push(locale);\n        }\n        if (!this.domainManagers[locale]) {\n          this.domainManagers[locale] = new DomainManager({\n            locale,\n            ...this.settings.domain,\n            useNoneFeature: this.settings.useNoneFeature,\n            trainByDomain: this.settings.trainByDomain\n          }, this.container);\n        }\n      }\n    }\n  }\n  removeLanguage(locales) {\n    if (Array.isArray(locales)) {\n      locales.forEach(locale => this.removeLanguage(locale));\n    } else {\n      delete this.domainManagers[locales];\n      const index = this.locales.indexOf(locales);\n      if (index !== -1) {\n        this.locales.splice(index, 1);\n      }\n    }\n  }\n  guessLanguage(srcInput) {\n    const input = srcInput;\n    const isString = typeof input === 'string';\n    if (this.locales.length === 1) {\n      if (isString) {\n        return this.locales[0];\n      }\n      [input.locale] = this.locales;\n      return input;\n    }\n    if (!input) {\n      return isString ? undefined : input;\n    }\n    if (!isString && input.locale) {\n      return input;\n    }\n    const utterance = isString ? input : input.utterance;\n    if (this.locales.length === 1) {\n      if (isString) {\n        return this.locales[0];\n      }\n      [input.locale] = this.locales;\n    }\n    const guess = this.guesser.guess(utterance, this.locales, 1);\n    const locale = guess && guess.length > 0 ? guess[0].alpha2 : undefined;\n    if (isString) {\n      return locale;\n    }\n    input.locale = locale;\n    return input;\n  }\n  assignDomain(srcLocale, srcIntent, srcDomain) {\n    const locale = srcDomain ? srcLocale.substr(0, 2).toLowerCase() : undefined;\n    const intent = srcDomain ? srcIntent : srcLocale;\n    const domain = srcDomain || srcIntent;\n    if (locale) {\n      if (!this.intentDomains[locale]) {\n        this.intentDomains[locale] = {};\n      }\n      this.intentDomains[locale][intent] = domain;\n    } else {\n      for (let i = 0; i < this.locales.length; i += 1) {\n        this.assignDomain(this.locales[i], intent, domain);\n      }\n    }\n  }\n  getIntentDomain(srcLocale, intent) {\n    const locale = srcLocale.substr(0, 2).toLowerCase();\n    if (!this.intentDomains[locale]) {\n      return 'default';\n    }\n    return this.intentDomains[locale][intent] || 'default';\n  }\n  getDomains() {\n    const result = {};\n    const locales = Object.keys(this.intentDomains);\n    for (let i = 0; i < locales.length; i += 1) {\n      const locale = locales[i];\n      result[locale] = {};\n      const intents = Object.keys(this.intentDomains[locale]);\n      for (let j = 0; j < intents.length; j += 1) {\n        const intent = intents[j];\n        const domain = this.intentDomains[locale][intent];\n        if (!result[locale][domain]) {\n          result[locale][domain] = [];\n        }\n        result[locale][domain].push(intent);\n      }\n    }\n    return result;\n  }\n  consolidateLocale(srcLocale, utterance) {\n    const locale = srcLocale ? srcLocale.substr(0, 2).toLowerCase() : this.guessLanguage(utterance);\n    if (!locale) {\n      throw new Error('Locale must be defined');\n    }\n    return locale;\n  }\n  consolidateManager(locale) {\n    const manager = this.domainManagers[locale];\n    if (!manager) {\n      throw new Error(`Domain Manager not found for locale ${locale}`);\n    }\n    return manager;\n  }\n  add(srcLocale, utterance, intent) {\n    const locale = this.consolidateLocale(srcLocale, utterance);\n    const manager = this.consolidateManager(locale);\n    const domain = this.getIntentDomain(locale, intent);\n    this.guesser.addExtraSentence(locale, utterance);\n    manager.add(domain, utterance, intent);\n  }\n  remove(srcLocale, utterance, intent) {\n    const locale = this.consolidateLocale(srcLocale, utterance);\n    const manager = this.consolidateManager(locale);\n    const domain = this.getIntentDomain(locale, intent);\n    manager.remove(domain, utterance, intent);\n  }\n  async innerTrain(settings) {\n    let locales = settings.locales || this.locales;\n    if (!Array.isArray(locales)) {\n      locales = [locales];\n    }\n    const promises = locales.filter(locale => this.domainManagers[locale]).map(locale => this.domainManagers[locale].train(settings.settings));\n    return Promise.all(promises);\n  }\n  async train(settings) {\n    const input = {\n      nluManager: this,\n      settings: this.applySettings(settings, this.settings)\n    };\n    delete input.settings.tag;\n    return this.runPipeline(input, this.pipelineTrain);\n  }\n  fillLanguage(srcInput) {\n    const input = srcInput;\n    input.languageGuessed = false;\n    if (!input.locale) {\n      input.locale = this.guessLanguage(input.utterance);\n      input.languageGuessed = true;\n    }\n    if (input.locale) {\n      input.localeIso2 = input.locale.substr(0, 2).toLowerCase();\n      input.language = (this.languageNames[input.localeIso2] || this.guesser.languagesAlpha2[input.localeIso2] || {}).name;\n    }\n    return input;\n  }\n  classificationsIsNone(classifications) {\n    if (classifications.length === 1) {\n      return false;\n    }\n    if (classifications.length === 0 || classifications[0].score === 0) {\n      return true;\n    }\n    return classifications[0].score === classifications[1].score;\n  }\n  checkIfIsNone(srcInput) {\n    const input = srcInput;\n    if (this.classificationsIsNone(input.classifications)) {\n      input.intent = 'None';\n      input.score = 1;\n    }\n    return input;\n  }\n  async innerClassify(srcInput) {\n    const input = srcInput;\n    const domain = this.domainManagers[input.localeIso2];\n    if (!domain) {\n      input.classifications = [];\n      input.domain = undefined;\n      input.intent = undefined;\n      input.score = undefined;\n      return input;\n    }\n    const classifications = await domain.process(srcInput);\n    input.classifications = classifications.classifications.sort((a, b) => b.score - a.score);\n    if (input.classifications.length === 0) {\n      input.classifications.push({\n        intent: 'None',\n        score: 1\n      });\n    }\n    input.intent = input.classifications[0].intent;\n    input.score = input.classifications[0].score;\n    if (input.intent === 'None') {\n      classifications.domain = 'default';\n    } else if (classifications.domain === 'default') {\n      input.domain = this.getIntentDomain(input.locale, input.intent);\n    } else {\n      input.domain = classifications.domain;\n    }\n    return input;\n  }\n  async defaultPipelineProcess(input) {\n    let output = await this.fillLanguage(input);\n    output = await this.innerClassify(output);\n    output = await this.checkIfIsNone(output);\n    delete output.settings;\n    delete output.classification;\n    return output;\n  }\n  process(locale, utterance, domain, settings) {\n    const input = typeof locale === 'object' ? locale : {\n      locale: utterance === undefined ? undefined : locale,\n      utterance: utterance === undefined ? locale : utterance,\n      domain,\n      settings: settings || this.settings\n    };\n    if (this.pipelineProcess) {\n      return this.runPipeline(input, this.pipelineProcess);\n    }\n    return this.defaultPipelineProcess(input);\n  }\n  toJSON() {\n    const result = {\n      settings: this.settings,\n      locales: this.locales,\n      languageNames: this.languageNames,\n      domainManagers: {},\n      intentDomains: this.intentDomains,\n      extraSentences: this.guesser.extraSentences.slice(0)\n    };\n    delete result.settings.container;\n    const keys = Object.keys(this.domainManagers);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      result.domainManagers[key] = this.domainManagers[key].toJSON();\n    }\n    return result;\n  }\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    for (let i = 0; i < json.locales.length; i += 1) {\n      this.addLanguage(json.locales[i]);\n    }\n    this.languageNames = json.languageNames;\n    this.intentDomains = json.intentDomains;\n    const keys = Object.keys(json.domainManagers);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      this.domainManagers[key].fromJSON(json.domainManagers[key]);\n    }\n    for (let i = 0; i < json.extraSentences.length; i += 1) {\n      const sentence = json.extraSentences[i];\n      this.guesser.addExtraSentence(sentence[0], sentence[1]);\n    }\n  }\n}\nmodule.exports = NluManager;","map":{"version":3,"names":["Clonable","require","Language","DomainManager","NluManager","constructor","settings","arguments","length","undefined","container","applySettings","tag","registerDefault","getConfiguration","get","register","guesser","locales","languageNames","domainManagers","intentDomains","addLanguage","pipelineTrain","getPipeline","pipelineProcess","registerConfiguration","registerPipeline","describeLanguage","locale","name","srcLocales","Array","isArray","i","substr","toLowerCase","includes","push","domain","useNoneFeature","trainByDomain","removeLanguage","forEach","index","indexOf","splice","guessLanguage","srcInput","input","isString","utterance","guess","alpha2","assignDomain","srcLocale","srcIntent","srcDomain","intent","getIntentDomain","getDomains","result","Object","keys","intents","j","consolidateLocale","Error","consolidateManager","manager","add","addExtraSentence","remove","innerTrain","promises","filter","map","train","Promise","all","nluManager","runPipeline","fillLanguage","languageGuessed","localeIso2","language","languagesAlpha2","classificationsIsNone","classifications","score","checkIfIsNone","innerClassify","process","sort","a","b","defaultPipelineProcess","output","classification","toJSON","extraSentences","slice","key","fromJSON","json","sentence","module","exports"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/moteur-rech/node_modules/@nlpjs/nlu/src/nlu-manager.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable } = require('@nlpjs/core');\nconst { Language } = require('@nlpjs/language-min');\nconst DomainManager = require('./domain-manager');\n\nclass NluManager extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = 'nlu-manager';\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    if (!this.container.get('Language')) {\n      this.container.register('Language', Language, false);\n    }\n    this.guesser = this.container.get('Language');\n    this.locales = [];\n    this.languageNames = {};\n    this.domainManagers = {};\n    this.intentDomains = {};\n    if (this.settings.locales) {\n      this.addLanguage(this.settings.locales);\n    }\n    this.applySettings(this, {\n      pipelineTrain: this.getPipeline(`${this.settings.tag}-train`),\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`),\n    });\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration('nlu-manager', {}, false);\n    this.container.registerPipeline(\n      'nlu-manager-train',\n      ['.innerTrain'],\n      false\n    );\n  }\n\n  describeLanguage(locale, name) {\n    this.languageNames[locale] = { locale, name };\n  }\n\n  addLanguage(srcLocales) {\n    if (srcLocales) {\n      const locales = Array.isArray(srcLocales) ? srcLocales : [srcLocales];\n      for (let i = 0; i < locales.length; i += 1) {\n        const locale = locales[i].substr(0, 2).toLowerCase();\n        if (!this.locales.includes(locale)) {\n          this.locales.push(locale);\n        }\n        if (!this.domainManagers[locale]) {\n          this.domainManagers[locale] = new DomainManager(\n            {\n              locale,\n              ...this.settings.domain,\n              useNoneFeature: this.settings.useNoneFeature,\n              trainByDomain: this.settings.trainByDomain,\n            },\n            this.container\n          );\n        }\n      }\n    }\n  }\n\n  removeLanguage(locales) {\n    if (Array.isArray(locales)) {\n      locales.forEach((locale) => this.removeLanguage(locale));\n    } else {\n      delete this.domainManagers[locales];\n      const index = this.locales.indexOf(locales);\n      if (index !== -1) {\n        this.locales.splice(index, 1);\n      }\n    }\n  }\n\n  guessLanguage(srcInput) {\n    const input = srcInput;\n    const isString = typeof input === 'string';\n    if (this.locales.length === 1) {\n      if (isString) {\n        return this.locales[0];\n      }\n      [input.locale] = this.locales;\n      return input;\n    }\n    if (!input) {\n      return isString ? undefined : input;\n    }\n    if (!isString && input.locale) {\n      return input;\n    }\n    const utterance = isString ? input : input.utterance;\n    if (this.locales.length === 1) {\n      if (isString) {\n        return this.locales[0];\n      }\n      [input.locale] = this.locales;\n    }\n    const guess = this.guesser.guess(utterance, this.locales, 1);\n    const locale = guess && guess.length > 0 ? guess[0].alpha2 : undefined;\n    if (isString) {\n      return locale;\n    }\n    input.locale = locale;\n    return input;\n  }\n\n  assignDomain(srcLocale, srcIntent, srcDomain) {\n    const locale = srcDomain ? srcLocale.substr(0, 2).toLowerCase() : undefined;\n    const intent = srcDomain ? srcIntent : srcLocale;\n    const domain = srcDomain || srcIntent;\n    if (locale) {\n      if (!this.intentDomains[locale]) {\n        this.intentDomains[locale] = {};\n      }\n      this.intentDomains[locale][intent] = domain;\n    } else {\n      for (let i = 0; i < this.locales.length; i += 1) {\n        this.assignDomain(this.locales[i], intent, domain);\n      }\n    }\n  }\n\n  getIntentDomain(srcLocale, intent) {\n    const locale = srcLocale.substr(0, 2).toLowerCase();\n    if (!this.intentDomains[locale]) {\n      return 'default';\n    }\n    return this.intentDomains[locale][intent] || 'default';\n  }\n\n  getDomains() {\n    const result = {};\n    const locales = Object.keys(this.intentDomains);\n    for (let i = 0; i < locales.length; i += 1) {\n      const locale = locales[i];\n      result[locale] = {};\n      const intents = Object.keys(this.intentDomains[locale]);\n      for (let j = 0; j < intents.length; j += 1) {\n        const intent = intents[j];\n        const domain = this.intentDomains[locale][intent];\n        if (!result[locale][domain]) {\n          result[locale][domain] = [];\n        }\n        result[locale][domain].push(intent);\n      }\n    }\n    return result;\n  }\n\n  consolidateLocale(srcLocale, utterance) {\n    const locale = srcLocale\n      ? srcLocale.substr(0, 2).toLowerCase()\n      : this.guessLanguage(utterance);\n    if (!locale) {\n      throw new Error('Locale must be defined');\n    }\n    return locale;\n  }\n\n  consolidateManager(locale) {\n    const manager = this.domainManagers[locale];\n    if (!manager) {\n      throw new Error(`Domain Manager not found for locale ${locale}`);\n    }\n    return manager;\n  }\n\n  add(srcLocale, utterance, intent) {\n    const locale = this.consolidateLocale(srcLocale, utterance);\n    const manager = this.consolidateManager(locale);\n    const domain = this.getIntentDomain(locale, intent);\n    this.guesser.addExtraSentence(locale, utterance);\n    manager.add(domain, utterance, intent);\n  }\n\n  remove(srcLocale, utterance, intent) {\n    const locale = this.consolidateLocale(srcLocale, utterance);\n    const manager = this.consolidateManager(locale);\n    const domain = this.getIntentDomain(locale, intent);\n    manager.remove(domain, utterance, intent);\n  }\n\n  async innerTrain(settings) {\n    let locales = settings.locales || this.locales;\n    if (!Array.isArray(locales)) {\n      locales = [locales];\n    }\n    const promises = locales\n      .filter((locale) => this.domainManagers[locale])\n      .map((locale) => this.domainManagers[locale].train(settings.settings));\n    return Promise.all(promises);\n  }\n\n  async train(settings) {\n    const input = {\n      nluManager: this,\n      settings: this.applySettings(settings, this.settings),\n    };\n    delete input.settings.tag;\n    return this.runPipeline(input, this.pipelineTrain);\n  }\n\n  fillLanguage(srcInput) {\n    const input = srcInput;\n    input.languageGuessed = false;\n    if (!input.locale) {\n      input.locale = this.guessLanguage(input.utterance);\n      input.languageGuessed = true;\n    }\n    if (input.locale) {\n      input.localeIso2 = input.locale.substr(0, 2).toLowerCase();\n      input.language = (\n        this.languageNames[input.localeIso2] ||\n        this.guesser.languagesAlpha2[input.localeIso2] ||\n        {}\n      ).name;\n    }\n    return input;\n  }\n\n  classificationsIsNone(classifications) {\n    if (classifications.length === 1) {\n      return false;\n    }\n    if (classifications.length === 0 || classifications[0].score === 0) {\n      return true;\n    }\n    return classifications[0].score === classifications[1].score;\n  }\n\n  checkIfIsNone(srcInput) {\n    const input = srcInput;\n    if (this.classificationsIsNone(input.classifications)) {\n      input.intent = 'None';\n      input.score = 1;\n    }\n    return input;\n  }\n\n  async innerClassify(srcInput) {\n    const input = srcInput;\n    const domain = this.domainManagers[input.localeIso2];\n    if (!domain) {\n      input.classifications = [];\n      input.domain = undefined;\n      input.intent = undefined;\n      input.score = undefined;\n      return input;\n    }\n    const classifications = await domain.process(srcInput);\n    input.classifications = classifications.classifications.sort(\n      (a, b) => b.score - a.score\n    );\n    if (input.classifications.length === 0) {\n      input.classifications.push({ intent: 'None', score: 1 });\n    }\n    input.intent = input.classifications[0].intent;\n    input.score = input.classifications[0].score;\n    if (input.intent === 'None') {\n      classifications.domain = 'default';\n    } else if (classifications.domain === 'default') {\n      input.domain = this.getIntentDomain(input.locale, input.intent);\n    } else {\n      input.domain = classifications.domain;\n    }\n\n    return input;\n  }\n\n  async defaultPipelineProcess(input) {\n    let output = await this.fillLanguage(input);\n    output = await this.innerClassify(output);\n    output = await this.checkIfIsNone(output);\n    delete output.settings;\n    delete output.classification;\n    return output;\n  }\n\n  process(locale, utterance, domain, settings) {\n    const input =\n      typeof locale === 'object'\n        ? locale\n        : {\n            locale: utterance === undefined ? undefined : locale,\n            utterance: utterance === undefined ? locale : utterance,\n            domain,\n            settings: settings || this.settings,\n          };\n    if (this.pipelineProcess) {\n      return this.runPipeline(input, this.pipelineProcess);\n    }\n    return this.defaultPipelineProcess(input);\n  }\n\n  toJSON() {\n    const result = {\n      settings: this.settings,\n      locales: this.locales,\n      languageNames: this.languageNames,\n      domainManagers: {},\n      intentDomains: this.intentDomains,\n      extraSentences: this.guesser.extraSentences.slice(0),\n    };\n    delete result.settings.container;\n    const keys = Object.keys(this.domainManagers);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      result.domainManagers[key] = this.domainManagers[key].toJSON();\n    }\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    for (let i = 0; i < json.locales.length; i += 1) {\n      this.addLanguage(json.locales[i]);\n    }\n    this.languageNames = json.languageNames;\n    this.intentDomains = json.intentDomains;\n\n    const keys = Object.keys(json.domainManagers);\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      this.domainManagers[key].fromJSON(json.domainManagers[key]);\n    }\n    for (let i = 0; i < json.extraSentences.length; i += 1) {\n      const sentence = json.extraSentences[i];\n      this.guesser.addExtraSentence(sentence[0], sentence[1]);\n    }\n  }\n}\n\nmodule.exports = NluManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}