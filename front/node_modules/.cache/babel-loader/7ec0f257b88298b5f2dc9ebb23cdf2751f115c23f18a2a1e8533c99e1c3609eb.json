{"ast":null,"code":"var _jsxFileName = \"/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/front/src/components/Parser.js\",\n  _s = $RefreshSig$();\nimport { text } from \"./text.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { dbApi } from \"../hooks/dp_api\";\nimport { Utils } from \"../utils/utils.js\";\nimport JSON5 from \"json5\";\nimport files from \"../files/files.json\";\nimport dir from \"../files/test1.txt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar reader = require(\"any-text\");\nconst Parser = () => {\n  _s();\n  const [tokens, setTokens] = useState({});\n  const {\n    sendText\n  } = dbApi();\n  const {\n    readDirectory\n  } = Utils();\n  useEffect(() => {\n    console.log(\" Files \", files);\n    var data = require(\"../files/test1.txt\");\n    console.log(\"text decoded => \", data.text);\n    fetch(dir).then(r => r.text()).then(text => {\n      console.log(\"text decoded => \", text);\n    });\n    const titre = \"monTitre\";\n    sendText(titre, text).then(data => {\n      const object = JSON5.parse(data);\n      setTokens(object);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \"Paragraphe :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"500px\",\n        margin: \"auto\"\n      },\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fr\\xE9quences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tokens && Object.entries(tokens).map(_ref => {\n          let [key, value] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Parser, \"V06netxq9aW13FKh/oYxaoV9/uo=\");\n_c = Parser;\nexport default Parser;\nvar _c;\n$RefreshReg$(_c, \"Parser\");","map":{"version":3,"names":["text","React","useState","useEffect","dbApi","Utils","JSON5","files","dir","jsxDEV","_jsxDEV","reader","require","Parser","_s","tokens","setTokens","sendText","readDirectory","console","log","data","fetch","then","r","titre","object","parse","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","className","Object","entries","map","_ref","key","value","_c","$RefreshReg$"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/front/src/components/Parser.js"],"sourcesContent":["import { text } from \"./text.js\";\n\nimport React, { useState, useEffect } from \"react\";\n\nimport { dbApi } from \"../hooks/dp_api\";\nimport { Utils } from \"../utils/utils.js\";\nimport JSON5 from \"json5\";\nimport files from \"../files/files.json\";\nimport dir from \"../files/test1.txt\";\nvar reader = require(\"any-text\");\n\nconst Parser = () => {\n  const [tokens, setTokens] = useState({});\n  const { sendText } = dbApi();\n  const { readDirectory } = Utils();\n\n  useEffect(() => {\n    console.log(\" Files \", files);\n    var data = require(\"../files/test1.txt\");\n    console.log(\"text decoded => \", data.text);\n    fetch(dir)\n      .then((r) => r.text())\n      .then((text) => {\n        console.log(\"text decoded => \", text);\n      });\n    const titre = \"monTitre\";\n    sendText(titre, text)\n      .then((data) => {\n        const object = JSON5.parse(data);\n        setTokens(object);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>\n        <br></br>\n        Paragraphe :<br></br>\n        <br></br>\n        {text}\n      </h2>\n      <br></br>\n      <br></br>\n      <br></br>\n      <table\n        style={{ width: \"500px\", margin: \"auto\" }}\n        className=\"table table-bordered table-striped\"\n      >\n        <thead>\n          <tr>\n            <th>Mots</th>\n            <th>Fr√©quences</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tokens &&\n            Object.entries(tokens).map(([key, value]) => (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{value}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Parser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}