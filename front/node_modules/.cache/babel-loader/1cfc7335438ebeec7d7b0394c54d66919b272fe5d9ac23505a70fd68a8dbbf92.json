{"ast":null,"code":"/**\n * find the first item in the range to validate the predicate\n */\nmodule.exports = function disect(min, max, fn) {\n  var array;\n  var index;\n  var tested = {};\n  if (Array.isArray(min) && arguments.length === 2) {\n    array = min;\n    min = 0;\n    predicate = max;\n    max = array.length;\n    fn = function (index) {\n      return predicate(array[index], index);\n    };\n  }\n  function test(i) {\n    if (typeof tested[i] === 'undefined') {\n      return tested[i] = fn(i);\n    } else {\n      return tested[i];\n    }\n  }\n  while (max > min + 1) {\n    index = min + Math.floor((max - min) / 2);\n    // true if what we're looking for is lower\n    // false if what we're looking for is higher\n    if (test(index)) {\n      max = index;\n    } else {\n      min = index;\n    }\n  }\n  return test(min) ? min : max;\n};","map":{"version":3,"names":["module","exports","disect","min","max","fn","array","index","tested","Array","isArray","arguments","length","predicate","test","i","Math","floor"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/moteur-rech/node_modules/disect/index.js"],"sourcesContent":["/**\n * find the first item in the range to validate the predicate\n */\nmodule.exports = function disect(min, max, fn) {\n  var array;\n  var index;\n  var tested = {};\n\n  if(Array.isArray(min) && arguments.length === 2) {\n    array = min;\n    min = 0;\n    predicate = max;\n    max = array.length;\n    fn = function(index) {\n      return predicate(array[index], index);\n    }\n  }\n\n  function test (i) {\n    if(typeof tested[i] === 'undefined') {\n      return tested[i] = fn(i);\n    }\n    else {\n      return tested[i];\n    }\n  }\n\n  while(max > min +1) {\n    index = min + Math.floor((max - min) / 2);\n    // true if what we're looking for is lower\n    // false if what we're looking for is higher\n    if(test(index)) {\n      max = index;\n    }\n    else {\n      min = index;\n    }\n  }\n  return test(min) ? min : max;\n};\n"],"mappings":"AAAA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,MAAMA,CAACC,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAE;EAC7C,IAAIC,KAAK;EACT,IAAIC,KAAK;EACT,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAGC,KAAK,CAACC,OAAO,CAACP,GAAG,CAAC,IAAIQ,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC/CN,KAAK,GAAGH,GAAG;IACXA,GAAG,GAAG,CAAC;IACPU,SAAS,GAAGT,GAAG;IACfA,GAAG,GAAGE,KAAK,CAACM,MAAM;IAClBP,EAAE,GAAG,SAAAA,CAASE,KAAK,EAAE;MACnB,OAAOM,SAAS,CAACP,KAAK,CAACC,KAAK,CAAC,EAAEA,KAAK,CAAC;IACvC,CAAC;EACH;EAEA,SAASO,IAAIA,CAAEC,CAAC,EAAE;IAChB,IAAG,OAAOP,MAAM,CAACO,CAAC,CAAC,KAAK,WAAW,EAAE;MACnC,OAAOP,MAAM,CAACO,CAAC,CAAC,GAAGV,EAAE,CAACU,CAAC,CAAC;IAC1B,CAAC,MACI;MACH,OAAOP,MAAM,CAACO,CAAC,CAAC;IAClB;EACF;EAEA,OAAMX,GAAG,GAAGD,GAAG,GAAE,CAAC,EAAE;IAClBI,KAAK,GAAGJ,GAAG,GAAGa,IAAI,CAACC,KAAK,CAAC,CAACb,GAAG,GAAGD,GAAG,IAAI,CAAC,CAAC;IACzC;IACA;IACA,IAAGW,IAAI,CAACP,KAAK,CAAC,EAAE;MACdH,GAAG,GAAGG,KAAK;IACb,CAAC,MACI;MACHJ,GAAG,GAAGI,KAAK;IACb;EACF;EACA,OAAOO,IAAI,CAACX,GAAG,CAAC,GAAGA,GAAG,GAAGC,GAAG;AAC9B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}