{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  Clonable,\n  defaultContainer\n} = require('@nlpjs/core');\nconst http = require('http');\nconst https = require('https');\nconst querystring = require('querystring');\nconst url = require('url');\nconst cultures = {\n  bn: 'bn_BD',\n  el: 'el_GR',\n  en: 'en_US',\n  hi: 'hi_IN',\n  fa: 'fa_IR',\n  gl: 'gl_ES',\n  pt: 'pt_BR',\n  sv: 'sv_SE',\n  tl: 'tl_PH',\n  ja: 'ja_JP',\n  ar: 'ar_AE',\n  hy: 'hy_AM',\n  eu: 'eu_ES',\n  ca: 'ca_ES',\n  cs: 'cs_CZ',\n  da: 'da_DK',\n  ga: 'ga_IE',\n  ta: 'ta_IN',\n  uk: 'uk_UA',\n  zh: 'zh_CN',\n  no: 'nb_NO'\n};\nclass BuiltinDuckling extends Clonable {\n  constructor() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultContainer;\n    super({\n      settings: {},\n      container: settings.container || container\n    }, container);\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = `builtin-duckling`;\n    }\n    this.registerDefault();\n    this.applySettings(this.settings, this.container.getConfiguration(this.settings.tag));\n    this.url = url.parse(this.settings.ducklingUrl);\n    this.client = this.url.href.startsWith('https') ? https : http;\n    this.port = this.url.port;\n    if (!this.port) {\n      this.port = this.url.href.startsWith('https') ? 443 : 80;\n    }\n  }\n  registerDefault() {\n    this.container.registerConfiguration(this.settings.tag, {\n      ducklingUrl: process.env.DUCKLING_URL || 'http://localhost:8000/parse'\n    }, false);\n  }\n\n  // istanbul ignore next\n  request(utterance, language) {\n    return new Promise((resolve, reject) => {\n      const postData = querystring.stringify({\n        text: utterance,\n        locale: BuiltinDuckling.getCulture(language)\n      });\n      const options = {\n        host: this.url.hostname,\n        port: this.port,\n        method: 'POST',\n        path: this.url.pathname,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Length': postData.length\n        }\n      };\n      const req = this.client.request(options, res => {\n        let result = '';\n        res.on('data', chunk => {\n          result += chunk;\n        });\n        res.on('end', () => {\n          try {\n            const obj = JSON.parse(result);\n            resolve(obj);\n          } catch (err) {\n            reject(err);\n          }\n        });\n        res.on('error', err => reject(err));\n      });\n      req.on('error', err => reject(err));\n      req.write(postData);\n      req.end();\n    });\n  }\n  transformEntity(entity) {\n    const result = {\n      start: entity.start,\n      end: entity.start + entity.body.length - 1,\n      len: entity.body.length,\n      accuracy: 0.95,\n      sourceText: entity.body,\n      utteranceText: entity.body,\n      rawEntity: entity.dim\n    };\n    if (entity.dim === 'email') {\n      result.entity = 'email';\n      result.resolution = {\n        value: entity.body\n      };\n    } else if (entity.dim === 'phone-number') {\n      result.entity = 'phonenumber';\n      result.resolution = {\n        value: entity.value.value\n      };\n    } else if (entity.dim === 'url') {\n      result.entity = 'url';\n      result.resolution = {\n        value: entity.value.value,\n        domain: entity.value.domain\n      };\n    } else if (entity.dim === 'number' || entity.dim === 'ordinal') {\n      result.entity = entity.dim;\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        subtype: entity.value.value % 1 === 0 ? 'integer' : 'float'\n      };\n    } else if (entity.dim === 'distance') {\n      result.entity = 'dimension';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit,\n        subtype: 'distance'\n      };\n    } else if (entity.dim === 'quantity') {\n      result.entity = 'quantity';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit,\n        product: entity.value.product\n      };\n    } else if (entity.dim === 'temperature') {\n      result.entity = 'temperature';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit\n      };\n    } else if (entity.dim === 'volume') {\n      result.entity = 'dimension';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit,\n        subtype: 'volume'\n      };\n    } else if (entity.dim === 'amount-of-money') {\n      result.entity = 'currency';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit\n      };\n    } else if (entity.dim === 'duration') {\n      result.entity = 'duration';\n      result.resolution = {\n        strValue: entity.value.normalized.value.toString(),\n        value: entity.value.normalized.value,\n        unit: entity.value.normalized.unit\n      };\n    } else if (entity.dim === 'time') {\n      result.entity = 'date';\n      result.resolution = {\n        value: entity.value.value,\n        grain: entity.value.grain,\n        values: entity.value.values\n      };\n    }\n    return result;\n  }\n  transform(entities) {\n    return entities.map(x => this.transformEntity(x));\n  }\n  async findBuiltinEntities(utterance, language) {\n    try {\n      const result = await this.request(utterance, language);\n      return {\n        edges: this.transform(result),\n        source: result\n      };\n    } catch (ex) {\n      this.logger.error(ex);\n      return {\n        edges: []\n      };\n    }\n  }\n  async extract(srcInput) {\n    const input = srcInput;\n    const entities = await this.findBuiltinEntities(input.text || input.utterance, input.locale);\n    if (!input.edges) {\n      input.edges = [];\n    }\n    if (!input.sourceEntities) {\n      input.sourceEntities = [];\n    }\n    if (entities.edges) {\n      for (let i = 0; i < entities.edges.length; i += 1) {\n        input.edges.push(entities.edges[i]);\n      }\n    }\n    if (entities.source) {\n      for (let i = 0; i < entities.source.length; i += 1) {\n        input.sourceEntities.push(entities.source[i]);\n      }\n    }\n    return input;\n  }\n  run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    const extractor = this.container.get(`extract-builtin-${locale}`) || this;\n    return extractor.extract(input);\n  }\n  static getCulture(locale) {\n    const result = cultures[locale];\n    if (result) {\n      return result;\n    }\n    return locale ? `${locale}_${locale.toUpperCase()}` : 'en_US';\n  }\n}\nmodule.exports = BuiltinDuckling;","map":{"version":3,"names":["Clonable","defaultContainer","require","http","https","querystring","url","cultures","bn","el","en","hi","fa","gl","pt","sv","tl","ja","ar","hy","eu","ca","cs","da","ga","ta","uk","zh","no","BuiltinDuckling","constructor","settings","arguments","length","undefined","container","applySettings","tag","registerDefault","getConfiguration","parse","ducklingUrl","client","href","startsWith","port","registerConfiguration","process","env","DUCKLING_URL","request","utterance","language","Promise","resolve","reject","postData","stringify","text","locale","getCulture","options","host","hostname","method","path","pathname","headers","req","res","result","on","chunk","obj","JSON","err","write","end","transformEntity","entity","start","body","len","accuracy","sourceText","utteranceText","rawEntity","dim","resolution","value","domain","strValue","toString","subtype","unit","product","normalized","grain","values","transform","entities","map","x","findBuiltinEntities","edges","source","ex","logger","error","extract","srcInput","input","sourceEntities","i","push","run","extractor","get","toUpperCase","module","exports"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/moteur-rech/node_modules/@nlpjs/builtin-duckling/src/builtin-duckling.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable, defaultContainer } = require('@nlpjs/core');\nconst http = require('http');\nconst https = require('https');\nconst querystring = require('querystring');\nconst url = require('url');\n\nconst cultures = {\n  bn: 'bn_BD',\n  el: 'el_GR',\n  en: 'en_US',\n  hi: 'hi_IN',\n  fa: 'fa_IR',\n  gl: 'gl_ES',\n  pt: 'pt_BR',\n  sv: 'sv_SE',\n  tl: 'tl_PH',\n  ja: 'ja_JP',\n  ar: 'ar_AE',\n  hy: 'hy_AM',\n  eu: 'eu_ES',\n  ca: 'ca_ES',\n  cs: 'cs_CZ',\n  da: 'da_DK',\n  ga: 'ga_IE',\n  ta: 'ta_IN',\n  uk: 'uk_UA',\n  zh: 'zh_CN',\n  no: 'nb_NO',\n};\n\nclass BuiltinDuckling extends Clonable {\n  constructor(settings = {}, container = defaultContainer) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = `builtin-duckling`;\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.url = url.parse(this.settings.ducklingUrl);\n    this.client = this.url.href.startsWith('https') ? https : http;\n    this.port = this.url.port;\n    if (!this.port) {\n      this.port = this.url.href.startsWith('https') ? 443 : 80;\n    }\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration(\n      this.settings.tag,\n      {\n        ducklingUrl: process.env.DUCKLING_URL || 'http://localhost:8000/parse',\n      },\n      false\n    );\n  }\n\n  // istanbul ignore next\n  request(utterance, language) {\n    return new Promise((resolve, reject) => {\n      const postData = querystring.stringify({\n        text: utterance,\n        locale: BuiltinDuckling.getCulture(language),\n      });\n\n      const options = {\n        host: this.url.hostname,\n        port: this.port,\n        method: 'POST',\n        path: this.url.pathname,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Length': postData.length,\n        },\n      };\n      const req = this.client.request(options, (res) => {\n        let result = '';\n        res.on('data', (chunk) => {\n          result += chunk;\n        });\n        res.on('end', () => {\n          try {\n            const obj = JSON.parse(result);\n            resolve(obj);\n          } catch (err) {\n            reject(err);\n          }\n        });\n        res.on('error', (err) => reject(err));\n      });\n      req.on('error', (err) => reject(err));\n      req.write(postData);\n      req.end();\n    });\n  }\n\n  transformEntity(entity) {\n    const result = {\n      start: entity.start,\n      end: entity.start + entity.body.length - 1,\n      len: entity.body.length,\n      accuracy: 0.95,\n      sourceText: entity.body,\n      utteranceText: entity.body,\n      rawEntity: entity.dim,\n    };\n    if (entity.dim === 'email') {\n      result.entity = 'email';\n      result.resolution = {\n        value: entity.body,\n      };\n    } else if (entity.dim === 'phone-number') {\n      result.entity = 'phonenumber';\n      result.resolution = {\n        value: entity.value.value,\n      };\n    } else if (entity.dim === 'url') {\n      result.entity = 'url';\n      result.resolution = {\n        value: entity.value.value,\n        domain: entity.value.domain,\n      };\n    } else if (entity.dim === 'number' || entity.dim === 'ordinal') {\n      result.entity = entity.dim;\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        subtype: entity.value.value % 1 === 0 ? 'integer' : 'float',\n      };\n    } else if (entity.dim === 'distance') {\n      result.entity = 'dimension';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit,\n        subtype: 'distance',\n      };\n    } else if (entity.dim === 'quantity') {\n      result.entity = 'quantity';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit,\n        product: entity.value.product,\n      };\n    } else if (entity.dim === 'temperature') {\n      result.entity = 'temperature';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit,\n      };\n    } else if (entity.dim === 'volume') {\n      result.entity = 'dimension';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit,\n        subtype: 'volume',\n      };\n    } else if (entity.dim === 'amount-of-money') {\n      result.entity = 'currency';\n      result.resolution = {\n        strValue: entity.value.value.toString(),\n        value: entity.value.value,\n        unit: entity.value.unit,\n      };\n    } else if (entity.dim === 'duration') {\n      result.entity = 'duration';\n      result.resolution = {\n        strValue: entity.value.normalized.value.toString(),\n        value: entity.value.normalized.value,\n        unit: entity.value.normalized.unit,\n      };\n    } else if (entity.dim === 'time') {\n      result.entity = 'date';\n      result.resolution = {\n        value: entity.value.value,\n        grain: entity.value.grain,\n        values: entity.value.values,\n      };\n    }\n    return result;\n  }\n\n  transform(entities) {\n    return entities.map((x) => this.transformEntity(x));\n  }\n\n  async findBuiltinEntities(utterance, language) {\n    try {\n      const result = await this.request(utterance, language);\n      return { edges: this.transform(result), source: result };\n    } catch (ex) {\n      this.logger.error(ex);\n      return { edges: [] };\n    }\n  }\n\n  async extract(srcInput) {\n    const input = srcInput;\n    const entities = await this.findBuiltinEntities(\n      input.text || input.utterance,\n      input.locale\n    );\n    if (!input.edges) {\n      input.edges = [];\n    }\n    if (!input.sourceEntities) {\n      input.sourceEntities = [];\n    }\n    if (entities.edges) {\n      for (let i = 0; i < entities.edges.length; i += 1) {\n        input.edges.push(entities.edges[i]);\n      }\n    }\n    if (entities.source) {\n      for (let i = 0; i < entities.source.length; i += 1) {\n        input.sourceEntities.push(entities.source[i]);\n      }\n    }\n    return input;\n  }\n\n  run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    const extractor = this.container.get(`extract-builtin-${locale}`) || this;\n    return extractor.extract(input);\n  }\n\n  static getCulture(locale) {\n    const result = cultures[locale];\n    if (result) {\n      return result;\n    }\n    return locale ? `${locale}_${locale.toUpperCase()}` : 'en_US';\n  }\n}\n\nmodule.exports = BuiltinDuckling;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}