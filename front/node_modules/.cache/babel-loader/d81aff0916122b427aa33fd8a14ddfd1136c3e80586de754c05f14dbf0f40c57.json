{"ast":null,"code":"'use strict';\n\nvar Stream = require('stream');\n\n// from\n//\n// a stream that reads from an source.\n// source may be an array, or a function.\n// from handles pause behaviour for you.\n\nmodule.exports = function from(source) {\n  if (Array.isArray(source)) {\n    var source_index = 0,\n      source_len = source.length;\n    return from(function (i) {\n      if (source_index < source_len) this.emit('data', source[source_index++]);else this.emit('end');\n      return true;\n    });\n  }\n  var s = new Stream(),\n    i = 0;\n  s.ended = false;\n  s.started = false;\n  s.readable = true;\n  s.writable = false;\n  s.paused = false;\n  s.ended = false;\n  s.pause = function () {\n    s.started = true;\n    s.paused = true;\n  };\n  function next() {\n    s.started = true;\n    if (s.ended) return;\n    while (!s.ended && !s.paused && source.call(s, i++, function () {\n      if (!s.ended && !s.paused) process.nextTick(next);\n    }));\n  }\n  s.resume = function () {\n    s.started = true;\n    s.paused = false;\n    next();\n  };\n  s.on('end', function () {\n    s.ended = true;\n    s.readable = false;\n    process.nextTick(s.destroy);\n  });\n  s.destroy = function () {\n    s.ended = true;\n    s.emit('close');\n  };\n  /*\n    by default, the stream will start emitting at nextTick\n    if you want, you can pause it, after pipeing.\n    you can also resume before next tick, and that will also\n    work.\n  */\n  process.nextTick(function () {\n    if (!s.started) s.resume();\n  });\n  return s;\n};","map":{"version":3,"names":["Stream","require","module","exports","from","source","Array","isArray","source_index","source_len","length","i","emit","s","ended","started","readable","writable","paused","pause","next","call","process","nextTick","resume","on","destroy"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/front/node_modules/from/index.js"],"sourcesContent":["\n'use strict';\n\nvar Stream = require('stream')\n\n// from\n//\n// a stream that reads from an source.\n// source may be an array, or a function.\n// from handles pause behaviour for you.\n\nmodule.exports =\nfunction from (source) {\n  if(Array.isArray(source)) {\n\t\tvar source_index = 0, source_len = source.length;\n    return from (function (i) {\n      if(source_index < source_len)\n        this.emit('data', source[source_index++])\n      else\n        this.emit('end')\n      return true\n    })\n  }\n  var s = new Stream(), i = 0\n  s.ended = false\n  s.started = false\n  s.readable = true\n  s.writable = false\n  s.paused = false\n  s.ended = false\n  s.pause = function () {\n    s.started = true\n    s.paused = true\n  }\n  function next () {\n    s.started = true\n    if(s.ended) return\n    while(!s.ended && !s.paused && source.call(s, i++, function () {\n      if(!s.ended && !s.paused)\n          process.nextTick(next);\n    }))\n      ;\n  }\n  s.resume = function () {\n    s.started = true\n    s.paused = false\n    next()\n  }\n  s.on('end', function () {\n    s.ended = true\n    s.readable = false\n    process.nextTick(s.destroy)\n  })\n  s.destroy = function () {\n    s.ended = true\n    s.emit('close') \n  }\n  /*\n    by default, the stream will start emitting at nextTick\n    if you want, you can pause it, after pipeing.\n    you can also resume before next tick, and that will also\n    work.\n  */\n  process.nextTick(function () {\n    if(!s.started) s.resume()\n  })\n  return s\n}\n"],"mappings":"AACA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GACd,SAASC,IAAIA,CAAEC,MAAM,EAAE;EACrB,IAAGC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;IAC1B,IAAIG,YAAY,GAAG,CAAC;MAAEC,UAAU,GAAGJ,MAAM,CAACK,MAAM;IAC9C,OAAON,IAAI,CAAE,UAAUO,CAAC,EAAE;MACxB,IAAGH,YAAY,GAAGC,UAAU,EAC1B,IAAI,CAACG,IAAI,CAAC,MAAM,EAAEP,MAAM,CAACG,YAAY,EAAE,CAAC,CAAC,MAEzC,IAAI,CAACI,IAAI,CAAC,KAAK,CAAC;MAClB,OAAO,IAAI;IACb,CAAC,CAAC;EACJ;EACA,IAAIC,CAAC,GAAG,IAAIb,MAAM,EAAE;IAAEW,CAAC,GAAG,CAAC;EAC3BE,CAAC,CAACC,KAAK,GAAG,KAAK;EACfD,CAAC,CAACE,OAAO,GAAG,KAAK;EACjBF,CAAC,CAACG,QAAQ,GAAG,IAAI;EACjBH,CAAC,CAACI,QAAQ,GAAG,KAAK;EAClBJ,CAAC,CAACK,MAAM,GAAG,KAAK;EAChBL,CAAC,CAACC,KAAK,GAAG,KAAK;EACfD,CAAC,CAACM,KAAK,GAAG,YAAY;IACpBN,CAAC,CAACE,OAAO,GAAG,IAAI;IAChBF,CAAC,CAACK,MAAM,GAAG,IAAI;EACjB,CAAC;EACD,SAASE,IAAIA,CAAA,EAAI;IACfP,CAAC,CAACE,OAAO,GAAG,IAAI;IAChB,IAAGF,CAAC,CAACC,KAAK,EAAE;IACZ,OAAM,CAACD,CAAC,CAACC,KAAK,IAAI,CAACD,CAAC,CAACK,MAAM,IAAIb,MAAM,CAACgB,IAAI,CAACR,CAAC,EAAEF,CAAC,EAAE,EAAE,YAAY;MAC7D,IAAG,CAACE,CAAC,CAACC,KAAK,IAAI,CAACD,CAAC,CAACK,MAAM,EACpBI,OAAO,CAACC,QAAQ,CAACH,IAAI,CAAC;IAC5B,CAAC,CAAC,CACA;EACJ;EACAP,CAAC,CAACW,MAAM,GAAG,YAAY;IACrBX,CAAC,CAACE,OAAO,GAAG,IAAI;IAChBF,CAAC,CAACK,MAAM,GAAG,KAAK;IAChBE,IAAI,EAAE;EACR,CAAC;EACDP,CAAC,CAACY,EAAE,CAAC,KAAK,EAAE,YAAY;IACtBZ,CAAC,CAACC,KAAK,GAAG,IAAI;IACdD,CAAC,CAACG,QAAQ,GAAG,KAAK;IAClBM,OAAO,CAACC,QAAQ,CAACV,CAAC,CAACa,OAAO,CAAC;EAC7B,CAAC,CAAC;EACFb,CAAC,CAACa,OAAO,GAAG,YAAY;IACtBb,CAAC,CAACC,KAAK,GAAG,IAAI;IACdD,CAAC,CAACD,IAAI,CAAC,OAAO,CAAC;EACjB,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;EACEU,OAAO,CAACC,QAAQ,CAAC,YAAY;IAC3B,IAAG,CAACV,CAAC,CAACE,OAAO,EAAEF,CAAC,CAACW,MAAM,EAAE;EAC3B,CAAC,CAAC;EACF,OAAOX,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}