{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  SentimentAnalyzer: SentimentAnalyzerBase\n} = require('@nlpjs/sentiment');\nconst {\n  LangAll\n} = require('@nlpjs/lang-all');\nconst {\n  Nlu\n} = require('@nlpjs/nlu');\nclass SentimentAnalyzer extends SentimentAnalyzerBase {\n  constructor() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let container = arguments.length > 1 ? arguments[1] : undefined;\n    super(settings, container);\n    this.container.use(LangAll);\n    this.container.use(Nlu);\n  }\n  async getSentiment(utterance) {\n    let locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n    let settings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const input = {\n      utterance,\n      locale,\n      ...settings\n    };\n    const result = await this.process(input);\n    return result.sentiment;\n  }\n}\nmodule.exports = SentimentAnalyzer;","map":{"version":3,"names":["SentimentAnalyzer","SentimentAnalyzerBase","require","LangAll","Nlu","constructor","settings","arguments","length","undefined","container","use","getSentiment","utterance","locale","input","result","process","sentiment","module","exports"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/moteur-rech/node_modules/node-nlp/src/sentiment/sentiment-analyzer.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  SentimentAnalyzer: SentimentAnalyzerBase,\n} = require('@nlpjs/sentiment');\nconst { LangAll } = require('@nlpjs/lang-all');\nconst { Nlu } = require('@nlpjs/nlu');\n\nclass SentimentAnalyzer extends SentimentAnalyzerBase {\n  constructor(settings = {}, container) {\n    super(settings, container);\n    this.container.use(LangAll);\n    this.container.use(Nlu);\n  }\n\n  async getSentiment(utterance, locale = 'en', settings = {}) {\n    const input = {\n      utterance,\n      locale,\n      ...settings,\n    };\n    const result = await this.process(input);\n    return result.sentiment;\n  }\n}\n\nmodule.exports = SentimentAnalyzer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EACJA,iBAAiB,EAAEC;AACrB,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC/B,MAAM;EAAEC;AAAQ,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC9C,MAAM;EAAEE;AAAI,CAAC,GAAGF,OAAO,CAAC,YAAY,CAAC;AAErC,MAAMF,iBAAiB,SAASC,qBAAqB,CAAC;EACpDI,WAAWA,CAAA,EAA2B;IAAA,IAA1BC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,SAAS,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAClC,KAAK,CAACH,QAAQ,EAAEI,SAAS,CAAC;IAC1B,IAAI,CAACA,SAAS,CAACC,GAAG,CAACR,OAAO,CAAC;IAC3B,IAAI,CAACO,SAAS,CAACC,GAAG,CAACP,GAAG,CAAC;EACzB;EAEA,MAAMQ,YAAYA,CAACC,SAAS,EAAgC;IAAA,IAA9BC,MAAM,GAAAP,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAAA,IAAED,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACxD,MAAMQ,KAAK,GAAG;MACZF,SAAS;MACTC,MAAM;MACN,GAAGR;IACL,CAAC;IACD,MAAMU,MAAM,GAAG,MAAM,IAAI,CAACC,OAAO,CAACF,KAAK,CAAC;IACxC,OAAOC,MAAM,CAACE,SAAS;EACzB;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGpB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}