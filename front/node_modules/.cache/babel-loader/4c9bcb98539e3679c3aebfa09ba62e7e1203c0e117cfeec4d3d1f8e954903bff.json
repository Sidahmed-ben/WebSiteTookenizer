{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  Clonable,\n  compareWildcars\n} = require('@nlpjs/core');\nconst {\n  SpellCheck\n} = require('@nlpjs/similarity');\nclass Nlu extends Clonable {\n  constructor() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let container = arguments.length > 1 ? arguments[1] : undefined;\n    super({\n      settings: {},\n      container: settings.container || container\n    }, container);\n    this.applySettings(this.settings, settings);\n    this.applySettings(this.settings, {\n      locale: 'en'\n    });\n    if (!this.settings.tag) {\n      this.settings.tag = `nlu-${this.settings.locale}`;\n    }\n    this.registerDefault();\n    this.applySettings(this.settings, this.container.getConfiguration(this.settings.tag));\n    this.applySettings(this, {\n      pipelinePrepare: this.getPipeline(`${this.settings.tag}-prepare`),\n      pipelineTrain: this.getPipeline(`${this.settings.tag}-train`),\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`)\n    });\n    this.spellCheck = new SpellCheck(this.settings);\n  }\n  registerDefault() {\n    this.container.registerConfiguration('nlu-??', {\n      keepStopwords: true,\n      nonefeatureValue: 1,\n      nonedeltaMultiplier: 1.2,\n      spellCheck: false,\n      spellCheckDistance: 1,\n      filterZeros: true,\n      log: true\n    }, false);\n    this.container.registerPipeline('nlu-??-train', ['.prepareCorpus', '.addNoneFeature', '.innerTrain'], false);\n  }\n  async defaultPipelinePrepare(input) {\n    let result;\n    if (this.cache) {\n      const now = new Date();\n      const diff = Math.abs(now.getTime() - this.cache.created) / 3600000;\n      if (diff > 1) {\n        this.cache.results = {};\n        this.cache.created = new Date().getTime();\n      }\n    }\n    if (!this.cache) {\n      this.cache = {\n        created: new Date().getTime(),\n        results: {},\n        normalize: this.container.get('normalize'),\n        tokenize: this.container.get('tokenize'),\n        removeStopwords: this.container.get('removeStopwords'),\n        stem: this.container.get('stem'),\n        arrToObj: this.container.get('arrToObj')\n      };\n    } else if (this.cache.results[input.settings.locale]) {\n      result = this.cache.results[input.settings.locale][input.text || input.utterance];\n      if (result) {\n        return result;\n      }\n    }\n    let output = input;\n    output = this.cache.normalize.run(output);\n    output = await this.cache.tokenize.run(output);\n    output = this.cache.removeStopwords.run(output);\n    output = await this.cache.stem.run(output);\n    output = this.cache.arrToObj.run(output);\n    result = output.tokens;\n    if (!this.cache.results[input.settings.locale]) {\n      this.cache.results[input.settings.locale] = {};\n    }\n    this.cache.results[input.settings.locale][input.text || input.utterance] = result;\n    return result;\n  }\n  async defaultPipelineProcess(input) {\n    let output = await this.prepare(input);\n    output = await this.doSpellCheck(output);\n    output = await this.textToFeatures(output);\n    output = await this.innerProcess(output);\n    output = await this.filterNonActivated(output);\n    output = await this.normalizeClassifications(output);\n    return output;\n  }\n  async prepare(text, srcSettings) {\n    const settings = srcSettings || this.settings;\n    if (typeof text === 'string') {\n      const input = {\n        locale: this.settings.locale,\n        text,\n        settings\n      };\n      if (this.pipelinePrepare) {\n        return this.runPipeline(input, this.pipelinePrepare);\n      }\n      return this.defaultPipelinePrepare(input);\n    }\n    if (typeof text === 'object') {\n      if (Array.isArray(text)) {\n        const result = [];\n        for (let i = 0; i < text.length; i += 1) {\n          result.push(await this.prepare(text[i], settings));\n        }\n        return result;\n      }\n      let item = settings.fieldNameSrc ? text[settings.fieldNameSrc] : text.texts || text.utterances;\n      if (!item && typeof item !== 'string') {\n        if (typeof text.text === 'string') {\n          item = text.text;\n        } else if (typeof text.utterance === 'string') {\n          item = text.utterance;\n        }\n      }\n      if (item || typeof item === 'string') {\n        const result = await this.prepare(item, settings);\n        const targetField = settings.fieldNameTgt || 'tokens';\n        return {\n          [targetField]: result,\n          ...text\n        };\n      }\n    }\n    throw new Error(`Error at nlu.prepare: expected a text but received ${text}`);\n  }\n  async doSpellCheck(input, srcSettings) {\n    const settings = this.applySettings(srcSettings || {}, this.settings);\n    let shouldSpellCheck = input.settings.spellCheck === undefined ? undefined : input.settings.spellCheck;\n    let spellCheckDistance = input.settings.spellCheckDistance === undefined ? undefined : input.settings.spellCheckDistance;\n    if (shouldSpellCheck === undefined) {\n      shouldSpellCheck = settings.spellCheck === undefined ? undefined : settings.spellCheck;\n    }\n    if (spellCheckDistance === undefined) {\n      spellCheckDistance = settings.spellCheckDistance === undefined ? 1 : settings.spellCheckDistance;\n    }\n    if (shouldSpellCheck) {\n      const tokens = this.spellCheck.check(input.tokens, spellCheckDistance);\n      input.tokens = tokens;\n    }\n    return input;\n  }\n  async prepareCorpus(srcInput) {\n    this.features = {};\n    this.intents = {};\n    this.intentFeatures = {};\n    const input = srcInput;\n    const {\n      corpus\n    } = input;\n    const result = [];\n    for (let i = 0; i < corpus.length; i += 1) {\n      const {\n        intent\n      } = corpus[i];\n      const item = {\n        input: await this.prepare(corpus[i].utterance, input.settings),\n        output: {\n          [intent]: 1\n        }\n      };\n      const keys = Object.keys(item.input);\n      if (!Object.prototype.hasOwnProperty.call(this.intentFeatures, intent)) {\n        this.intentFeatures[intent] = {};\n      }\n      for (let j = 0; j < keys.length; j += 1) {\n        this.features[keys[j]] = 1;\n        this.intentFeatures[intent][keys[j]] = 1;\n      }\n      this.intents[intent] = 1;\n      result.push(item);\n    }\n    const keys = Object.keys(this.intentFeatures);\n    this.featuresToIntent = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      const intent = keys[i];\n      const features = Object.keys(this.intentFeatures[intent]);\n      for (let j = 0; j < features.length; j += 1) {\n        const feature = features[j];\n        if (!Object.prototype.hasOwnProperty.call(this.featuresToIntent, feature)) {\n          this.featuresToIntent[feature] = [];\n        }\n        this.featuresToIntent[feature].push(intent);\n      }\n    }\n    this.spellCheck.setFeatures(this.features);\n    this.numFeatures = Object.keys(this.features).length;\n    this.numIntents = Object.keys(this.intents).length;\n    input.corpus = result;\n    return input;\n  }\n  addNoneFeature(input) {\n    const {\n      corpus\n    } = input;\n    if (input.settings && input.settings.useNoneFeature) {\n      corpus.push({\n        input: {\n          nonefeature: 1\n        },\n        output: {\n          None: 1\n        }\n      });\n    }\n    return input;\n  }\n  convertToArray(srcInput) {\n    const input = srcInput;\n    const {\n      classifications\n    } = input;\n    if (classifications) {\n      if (!this.intentsArr) {\n        if (this.intents) {\n          this.intentsArr = Object.keys(this.intents);\n          if (!this.intents.None) {\n            this.intentsArr.push('None');\n          }\n        } else {\n          this.intentsArr = Object.keys(classifications);\n        }\n      }\n      const keys = this.intentsArr;\n      const result = [];\n      for (let i = 0; i < keys.length; i += 1) {\n        const intent = keys[i];\n        const score = classifications[intent];\n        if (score !== undefined && (score > 0 || !input.settings.filterZeros)) {\n          result.push({\n            intent,\n            score\n          });\n        }\n      }\n      if (!result.length) {\n        result.push({\n          intent: 'None',\n          score: 1\n        });\n      }\n      input.classifications = result.sort((a, b) => b.score - a.score);\n    }\n    return input;\n  }\n  someSimilar(tokensA, tokensB) {\n    for (let i = 0; i < tokensB.length; i += 1) {\n      if (tokensA[tokensB[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  matchAllowList(intent, allowList) {\n    for (let i = 0; i < allowList.length; i += 1) {\n      if (compareWildcars(intent, allowList[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n  intentIsActivated(intent, tokens, allowList) {\n    if (allowList) {\n      if (Array.isArray(allowList)) {\n        return this.matchAllowList(intent, allowList);\n      }\n      if (!allowList[intent]) {\n        return false;\n      }\n    }\n    const features = this.intentFeatures[intent];\n    if (!features) {\n      return false;\n    }\n    const keys = Object.keys(tokens);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (features[keys[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  filterNonActivated(srcInput) {\n    if (this.intentFeatures && srcInput.classifications) {\n      const intents = srcInput.classifications.map(x => x.intent);\n      let someModified = false;\n      for (let i = 0; i < intents.length; i += 1) {\n        const intent = intents[i];\n        if (intent !== 'None') {\n          if (!this.intentIsActivated(intent, srcInput.tokens, srcInput.settings.allowList)) {\n            srcInput.classifications[i].score = 0;\n            someModified = true;\n          }\n        }\n      }\n      if (someModified) {\n        srcInput.classifications.sort((a, b) => b.score - a.score);\n      }\n    }\n    return srcInput;\n  }\n  normalizeClassifications(srcInput) {\n    const input = srcInput;\n    const {\n      classifications\n    } = input;\n    if (classifications) {\n      let total = 0;\n      for (let i = 0; i < classifications.length; i += 1) {\n        classifications[i].score **= 2;\n        total += classifications[i].score;\n      }\n      if (total > 0) {\n        for (let i = 0; i < classifications.length; i += 1) {\n          classifications[i].score /= total;\n        }\n      }\n    } else {\n      input.classifications = input.nluAnswer;\n    }\n    return input;\n  }\n  textToFeatures(srcInput) {\n    const input = srcInput;\n    const {\n      tokens\n    } = input;\n    const keys = Object.keys(tokens);\n    let unknownTokens = 0;\n    const features = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      const token = keys[i];\n      if (token === 'nonefeature') {\n        tokens[token] = this.nonefeatureValue;\n      } else if (!this.features || !this.features[token]) {\n        unknownTokens += 1;\n      } else {\n        features[token] = tokens[token];\n      }\n    }\n    let nonedelta = input.settings.nonedeltaValue === undefined ? this.numIntents / this.numFeatures : this.settings.nonedeltaValue;\n    let nonevalue = 0;\n    for (let i = 0; i < unknownTokens; i += 1) {\n      nonevalue += nonedelta;\n      nonedelta *= this.settings.nonedeltaMultiplier;\n    }\n    if (input.settings && input.settings.useNoneFeature && nonevalue) {\n      features.nonefeature = nonevalue;\n    }\n    input.tokens = features;\n    return input;\n  }\n  async innerTrain() {\n    throw new Error('This method should be implemented by child classes');\n  }\n  async train(corpus, settings) {\n    const input = {\n      corpus,\n      settings: this.applySettings(settings, this.settings)\n    };\n    return this.runPipeline(input, this.pipelineTrain);\n  }\n  async getExplanation(input, explanation) {\n    if (!explanation) {\n      return undefined;\n    }\n    const normalized = await this.container.get('normalize').run(input);\n    const tokenized = await this.container.get('tokenize').run(normalized);\n    const {\n      tokens\n    } = tokenized;\n    const stemmed = await this.container.get('stem').run(tokenized);\n    const stems = stemmed.tokens;\n    const result = [];\n    result.push({\n      token: '',\n      stem: '##bias',\n      weight: explanation.bias\n    });\n    for (let i = 0; i < tokens.length; i += 1) {\n      const stem = stems[i];\n      result.push({\n        token: tokens[i],\n        stem,\n        weight: explanation.weights[stem]\n      });\n    }\n    return result;\n  }\n  async process(utterance, settings) {\n    const input = {\n      text: utterance,\n      settings: this.applySettings(settings || {}, this.settings)\n    };\n    let output;\n    if (this.pipelineProcess) {\n      output = await this.runPipeline(input, this.pipelineProcess);\n    } else {\n      output = await this.defaultPipelineProcess(input);\n    }\n    if (Array.isArray(output.classifications)) {\n      const explanation = input.settings.returnExplanation ? await this.getExplanation(input, output.explanation) : undefined;\n      return {\n        classifications: output.classifications,\n        entities: undefined,\n        explanation\n      };\n    }\n    if (output.intents) {\n      output.classifications = output.intents;\n      delete output.intents;\n    }\n    return output;\n  }\n  toJSON() {\n    const result = {\n      settings: {\n        ...this.settings\n      },\n      features: this.features,\n      intents: this.intents,\n      intentFeatures: this.intentFeatures,\n      featuresToIntent: this.featuresToIntent\n    };\n    delete result.settings.container;\n    return result;\n  }\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    this.features = json.features || {};\n    this.intents = json.intents || {};\n    this.intentsArr = Object.keys(json.intents);\n    this.featuresToIntent = json.featuresToIntent || {};\n    this.intentFeatures = json.intentFeatures || {};\n    this.spellCheck.setFeatures(this.features);\n    this.numFeatures = Object.keys(this.features).length;\n    this.numIntents = Object.keys(this.intents).length;\n  }\n}\nmodule.exports = Nlu;","map":{"version":3,"names":["Clonable","compareWildcars","require","SpellCheck","Nlu","constructor","settings","arguments","length","undefined","container","applySettings","locale","tag","registerDefault","getConfiguration","pipelinePrepare","getPipeline","pipelineTrain","pipelineProcess","spellCheck","registerConfiguration","keepStopwords","nonefeatureValue","nonedeltaMultiplier","spellCheckDistance","filterZeros","log","registerPipeline","defaultPipelinePrepare","input","result","cache","now","Date","diff","Math","abs","getTime","created","results","normalize","get","tokenize","removeStopwords","stem","arrToObj","text","utterance","output","run","tokens","defaultPipelineProcess","prepare","doSpellCheck","textToFeatures","innerProcess","filterNonActivated","normalizeClassifications","srcSettings","runPipeline","Array","isArray","i","push","item","fieldNameSrc","texts","utterances","targetField","fieldNameTgt","Error","shouldSpellCheck","check","prepareCorpus","srcInput","features","intents","intentFeatures","corpus","intent","keys","Object","prototype","hasOwnProperty","call","j","featuresToIntent","feature","setFeatures","numFeatures","numIntents","addNoneFeature","useNoneFeature","nonefeature","None","convertToArray","classifications","intentsArr","score","sort","a","b","someSimilar","tokensA","tokensB","matchAllowList","allowList","intentIsActivated","map","x","someModified","total","nluAnswer","unknownTokens","token","nonedelta","nonedeltaValue","nonevalue","innerTrain","train","getExplanation","explanation","normalized","tokenized","stemmed","stems","weight","bias","weights","process","returnExplanation","entities","toJSON","fromJSON","json","module","exports"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/moteur-rech/node_modules/@nlpjs/nlu/src/nlu.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable, compareWildcars } = require('@nlpjs/core');\nconst { SpellCheck } = require('@nlpjs/similarity');\n\nclass Nlu extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    this.applySettings(this.settings, { locale: 'en' });\n    if (!this.settings.tag) {\n      this.settings.tag = `nlu-${this.settings.locale}`;\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.applySettings(this, {\n      pipelinePrepare: this.getPipeline(`${this.settings.tag}-prepare`),\n      pipelineTrain: this.getPipeline(`${this.settings.tag}-train`),\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`),\n    });\n    this.spellCheck = new SpellCheck(this.settings);\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration(\n      'nlu-??',\n      {\n        keepStopwords: true,\n        nonefeatureValue: 1,\n        nonedeltaMultiplier: 1.2,\n        spellCheck: false,\n        spellCheckDistance: 1,\n        filterZeros: true,\n        log: true,\n      },\n      false\n    );\n    this.container.registerPipeline(\n      'nlu-??-train',\n      ['.prepareCorpus', '.addNoneFeature', '.innerTrain'],\n      false\n    );\n  }\n\n  async defaultPipelinePrepare(input) {\n    let result;\n    if (this.cache) {\n      const now = new Date();\n      const diff = Math.abs(now.getTime() - this.cache.created) / 3600000;\n      if (diff > 1) {\n        this.cache.results = {};\n        this.cache.created = new Date().getTime();\n      }\n    }\n    if (!this.cache) {\n      this.cache = {\n        created: new Date().getTime(),\n        results: {},\n        normalize: this.container.get('normalize'),\n        tokenize: this.container.get('tokenize'),\n        removeStopwords: this.container.get('removeStopwords'),\n        stem: this.container.get('stem'),\n        arrToObj: this.container.get('arrToObj'),\n      };\n    } else if (this.cache.results[input.settings.locale]) {\n      result =\n        this.cache.results[input.settings.locale][\n          input.text || input.utterance\n        ];\n      if (result) {\n        return result;\n      }\n    }\n    let output = input;\n    output = this.cache.normalize.run(output);\n    output = await this.cache.tokenize.run(output);\n    output = this.cache.removeStopwords.run(output);\n    output = await this.cache.stem.run(output);\n    output = this.cache.arrToObj.run(output);\n    result = output.tokens;\n    if (!this.cache.results[input.settings.locale]) {\n      this.cache.results[input.settings.locale] = {};\n    }\n    this.cache.results[input.settings.locale][input.text || input.utterance] =\n      result;\n    return result;\n  }\n\n  async defaultPipelineProcess(input) {\n    let output = await this.prepare(input);\n    output = await this.doSpellCheck(output);\n    output = await this.textToFeatures(output);\n    output = await this.innerProcess(output);\n    output = await this.filterNonActivated(output);\n    output = await this.normalizeClassifications(output);\n    return output;\n  }\n\n  async prepare(text, srcSettings) {\n    const settings = srcSettings || this.settings;\n    if (typeof text === 'string') {\n      const input = {\n        locale: this.settings.locale,\n        text,\n        settings,\n      };\n      if (this.pipelinePrepare) {\n        return this.runPipeline(input, this.pipelinePrepare);\n      }\n      return this.defaultPipelinePrepare(input);\n    }\n    if (typeof text === 'object') {\n      if (Array.isArray(text)) {\n        const result = [];\n        for (let i = 0; i < text.length; i += 1) {\n          result.push(await this.prepare(text[i], settings));\n        }\n        return result;\n      }\n      let item = settings.fieldNameSrc\n        ? text[settings.fieldNameSrc]\n        : text.texts || text.utterances;\n      if (!item && typeof item !== 'string') {\n        if (typeof text.text === 'string') {\n          item = text.text;\n        } else if (typeof text.utterance === 'string') {\n          item = text.utterance;\n        }\n      }\n      if (item || typeof item === 'string') {\n        const result = await this.prepare(item, settings);\n        const targetField = settings.fieldNameTgt || 'tokens';\n        return { [targetField]: result, ...text };\n      }\n    }\n    throw new Error(\n      `Error at nlu.prepare: expected a text but received ${text}`\n    );\n  }\n\n  async doSpellCheck(input, srcSettings) {\n    const settings = this.applySettings(srcSettings || {}, this.settings);\n    let shouldSpellCheck =\n      input.settings.spellCheck === undefined\n        ? undefined\n        : input.settings.spellCheck;\n    let spellCheckDistance =\n      input.settings.spellCheckDistance === undefined\n        ? undefined\n        : input.settings.spellCheckDistance;\n    if (shouldSpellCheck === undefined) {\n      shouldSpellCheck =\n        settings.spellCheck === undefined ? undefined : settings.spellCheck;\n    }\n    if (spellCheckDistance === undefined) {\n      spellCheckDistance =\n        settings.spellCheckDistance === undefined\n          ? 1\n          : settings.spellCheckDistance;\n    }\n    if (shouldSpellCheck) {\n      const tokens = this.spellCheck.check(input.tokens, spellCheckDistance);\n      input.tokens = tokens;\n    }\n    return input;\n  }\n\n  async prepareCorpus(srcInput) {\n    this.features = {};\n    this.intents = {};\n    this.intentFeatures = {};\n    const input = srcInput;\n    const { corpus } = input;\n    const result = [];\n    for (let i = 0; i < corpus.length; i += 1) {\n      const { intent } = corpus[i];\n      const item = {\n        input: await this.prepare(corpus[i].utterance, input.settings),\n        output: { [intent]: 1 },\n      };\n      const keys = Object.keys(item.input);\n      if (!Object.prototype.hasOwnProperty.call(this.intentFeatures, intent)) {\n        this.intentFeatures[intent] = {};\n      }\n      for (let j = 0; j < keys.length; j += 1) {\n        this.features[keys[j]] = 1;\n        this.intentFeatures[intent][keys[j]] = 1;\n      }\n      this.intents[intent] = 1;\n      result.push(item);\n    }\n    const keys = Object.keys(this.intentFeatures);\n    this.featuresToIntent = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      const intent = keys[i];\n      const features = Object.keys(this.intentFeatures[intent]);\n      for (let j = 0; j < features.length; j += 1) {\n        const feature = features[j];\n        if (\n          !Object.prototype.hasOwnProperty.call(this.featuresToIntent, feature)\n        ) {\n          this.featuresToIntent[feature] = [];\n        }\n        this.featuresToIntent[feature].push(intent);\n      }\n    }\n    this.spellCheck.setFeatures(this.features);\n    this.numFeatures = Object.keys(this.features).length;\n    this.numIntents = Object.keys(this.intents).length;\n    input.corpus = result;\n    return input;\n  }\n\n  addNoneFeature(input) {\n    const { corpus } = input;\n    if (input.settings && input.settings.useNoneFeature) {\n      corpus.push({ input: { nonefeature: 1 }, output: { None: 1 } });\n    }\n    return input;\n  }\n\n  convertToArray(srcInput) {\n    const input = srcInput;\n    const { classifications } = input;\n    if (classifications) {\n      if (!this.intentsArr) {\n        if (this.intents) {\n          this.intentsArr = Object.keys(this.intents);\n          if (!this.intents.None) {\n            this.intentsArr.push('None');\n          }\n        } else {\n          this.intentsArr = Object.keys(classifications);\n        }\n      }\n      const keys = this.intentsArr;\n      const result = [];\n      for (let i = 0; i < keys.length; i += 1) {\n        const intent = keys[i];\n        const score = classifications[intent];\n        if (score !== undefined && (score > 0 || !input.settings.filterZeros)) {\n          result.push({ intent, score });\n        }\n      }\n      if (!result.length) {\n        result.push({ intent: 'None', score: 1 });\n      }\n      input.classifications = result.sort((a, b) => b.score - a.score);\n    }\n    return input;\n  }\n\n  someSimilar(tokensA, tokensB) {\n    for (let i = 0; i < tokensB.length; i += 1) {\n      if (tokensA[tokensB[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  matchAllowList(intent, allowList) {\n    for (let i = 0; i < allowList.length; i += 1) {\n      if (compareWildcars(intent, allowList[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  intentIsActivated(intent, tokens, allowList) {\n    if (allowList) {\n      if (Array.isArray(allowList)) {\n        return this.matchAllowList(intent, allowList);\n      }\n      if (!allowList[intent]) {\n        return false;\n      }\n    }\n    const features = this.intentFeatures[intent];\n    if (!features) {\n      return false;\n    }\n    const keys = Object.keys(tokens);\n    for (let i = 0; i < keys.length; i += 1) {\n      if (features[keys[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  filterNonActivated(srcInput) {\n    if (this.intentFeatures && srcInput.classifications) {\n      const intents = srcInput.classifications.map((x) => x.intent);\n      let someModified = false;\n      for (let i = 0; i < intents.length; i += 1) {\n        const intent = intents[i];\n        if (intent !== 'None') {\n          if (\n            !this.intentIsActivated(\n              intent,\n              srcInput.tokens,\n              srcInput.settings.allowList\n            )\n          ) {\n            srcInput.classifications[i].score = 0;\n            someModified = true;\n          }\n        }\n      }\n      if (someModified) {\n        srcInput.classifications.sort((a, b) => b.score - a.score);\n      }\n    }\n    return srcInput;\n  }\n\n  normalizeClassifications(srcInput) {\n    const input = srcInput;\n    const { classifications } = input;\n    if (classifications) {\n      let total = 0;\n      for (let i = 0; i < classifications.length; i += 1) {\n        classifications[i].score **= 2;\n        total += classifications[i].score;\n      }\n      if (total > 0) {\n        for (let i = 0; i < classifications.length; i += 1) {\n          classifications[i].score /= total;\n        }\n      }\n    } else {\n      input.classifications = input.nluAnswer;\n    }\n    return input;\n  }\n\n  textToFeatures(srcInput) {\n    const input = srcInput;\n    const { tokens } = input;\n    const keys = Object.keys(tokens);\n    let unknownTokens = 0;\n    const features = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      const token = keys[i];\n      if (token === 'nonefeature') {\n        tokens[token] = this.nonefeatureValue;\n      } else if (!this.features || !this.features[token]) {\n        unknownTokens += 1;\n      } else {\n        features[token] = tokens[token];\n      }\n    }\n    let nonedelta =\n      input.settings.nonedeltaValue === undefined\n        ? this.numIntents / this.numFeatures\n        : this.settings.nonedeltaValue;\n    let nonevalue = 0;\n    for (let i = 0; i < unknownTokens; i += 1) {\n      nonevalue += nonedelta;\n      nonedelta *= this.settings.nonedeltaMultiplier;\n    }\n    if (input.settings && input.settings.useNoneFeature && nonevalue) {\n      features.nonefeature = nonevalue;\n    }\n    input.tokens = features;\n    return input;\n  }\n\n  async innerTrain() {\n    throw new Error('This method should be implemented by child classes');\n  }\n\n  async train(corpus, settings) {\n    const input = {\n      corpus,\n      settings: this.applySettings(settings, this.settings),\n    };\n    return this.runPipeline(input, this.pipelineTrain);\n  }\n\n  async getExplanation(input, explanation) {\n    if (!explanation) {\n      return undefined;\n    }\n    const normalized = await this.container.get('normalize').run(input);\n    const tokenized = await this.container.get('tokenize').run(normalized);\n    const { tokens } = tokenized;\n    const stemmed = await this.container.get('stem').run(tokenized);\n    const stems = stemmed.tokens;\n    const result = [];\n    result.push({\n      token: '',\n      stem: '##bias',\n      weight: explanation.bias,\n    });\n    for (let i = 0; i < tokens.length; i += 1) {\n      const stem = stems[i];\n      result.push({\n        token: tokens[i],\n        stem,\n        weight: explanation.weights[stem],\n      });\n    }\n    return result;\n  }\n\n  async process(utterance, settings) {\n    const input = {\n      text: utterance,\n      settings: this.applySettings(settings || {}, this.settings),\n    };\n    let output;\n    if (this.pipelineProcess) {\n      output = await this.runPipeline(input, this.pipelineProcess);\n    } else {\n      output = await this.defaultPipelineProcess(input);\n    }\n    if (Array.isArray(output.classifications)) {\n      const explanation = input.settings.returnExplanation\n        ? await this.getExplanation(input, output.explanation)\n        : undefined;\n      return {\n        classifications: output.classifications,\n        entities: undefined,\n        explanation,\n      };\n    }\n    if (output.intents) {\n      output.classifications = output.intents;\n      delete output.intents;\n    }\n    return output;\n  }\n\n  toJSON() {\n    const result = {\n      settings: { ...this.settings },\n      features: this.features,\n      intents: this.intents,\n      intentFeatures: this.intentFeatures,\n      featuresToIntent: this.featuresToIntent,\n    };\n    delete result.settings.container;\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    this.features = json.features || {};\n    this.intents = json.intents || {};\n    this.intentsArr = Object.keys(json.intents);\n    this.featuresToIntent = json.featuresToIntent || {};\n    this.intentFeatures = json.intentFeatures || {};\n    this.spellCheck.setFeatures(this.features);\n    this.numFeatures = Object.keys(this.features).length;\n    this.numIntents = Object.keys(this.intents).length;\n  }\n}\n\nmodule.exports = Nlu;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}