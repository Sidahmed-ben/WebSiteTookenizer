{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  Clonable,\n  defaultContainer\n} = require('@nlpjs/core');\nconst Recognizers = require('@microsoft/recognizers-text-suite');\nconst BuiltinDictionary = require('./builtin-dictionary.json');\nconst BuiltinInverse = require('./builtin-inverse.json');\nconst cultures = {\n  bn: 'bn-bd',\n  el: 'el-gr',\n  en: 'en-us',\n  hi: 'hi-in',\n  fa: 'fa-ir',\n  gl: 'gl-es',\n  pt: 'pt-br',\n  sv: 'sv-se',\n  tl: 'tl-ph',\n  ja: 'ja-jp',\n  ar: 'ar-ae',\n  hy: 'hy-am',\n  eu: 'eu-es',\n  ca: 'ca-es',\n  cs: 'cs-cz',\n  da: 'da-dk',\n  ga: 'ga-ie',\n  ta: 'ta-in',\n  uk: 'uk-ua',\n  zh: 'zh-cn'\n};\nfunction getCulture(locale) {\n  const result = cultures[locale];\n  if (result) {\n    return result;\n  }\n  return locale ? `${locale}-${locale}` : 'en-us';\n}\nclass BuiltinMicrosoft extends Clonable {\n  constructor() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultContainer;\n    super({\n      settings: {},\n      container: settings.container || container\n    }, container);\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = `builtin-microsoft`;\n    }\n    this.registerDefault();\n    this.applySettings(this.settings, this.container.getConfiguration(this.settings.tag));\n    this.settings.builtinAllowList = {};\n    for (let i = 0; i < this.settings.allowList.length; i += 1) {\n      this.settings.builtinAllowList[this.settings.allowList[i]] = 1;\n    }\n  }\n  registerDefault() {\n    this.container.registerConfiguration('builtin-microsoft', {\n      builtins: ['Number', 'Ordinal', 'Percentage', 'Age', 'Currency', 'Dimension', 'Temperature', 'DateTime', 'PhoneNumber', 'IpAddress', 'Boolean', 'Email', 'Hashtag', 'URL'],\n      allowList: ['age', 'currency', 'dimension', 'temperature', 'number', 'numberrange', 'ordinal', 'percentage', 'email', 'hashtag', 'ip', 'mention', 'phonenumber', 'url', 'date', 'daterange', 'datetime', 'datetimealt', 'time', 'set', 'timerange', 'timezone', 'boolean', 'duration', 'datetimerange']\n    }, false);\n  }\n  translate(str, locale) {\n    if (BuiltinDictionary[locale]) {\n      const translation = BuiltinDictionary[locale][str];\n      return translation !== '' ? translation : str;\n    }\n    return str;\n  }\n  inverseTranslate(str, locale) {\n    if (BuiltinInverse[locale]) {\n      const translation = BuiltinInverse[locale][str];\n      if (translation && translation.length > 0) {\n        return translation[0];\n      }\n    }\n    return str;\n  }\n  calculateResolution(entity, locale) {\n    const {\n      resolution\n    } = entity;\n    if (['number', 'ordinal', 'percentage'].includes(entity.typeName)) {\n      let resValue = resolution.value;\n      if (resValue) {\n        resValue = resValue.replace(',', '.');\n      }\n      const value = Number.parseFloat(resValue);\n      return {\n        strValue: resValue,\n        value,\n        subtype: value % 1 === 0 ? 'integer' : 'float'\n      };\n    }\n    if (!resolution) {\n      return undefined;\n    }\n    if (entity.typeName === 'datetimeV2.date' || entity.typeName === 'datetimeV2.daterange' || entity.typeName === 'datetimeV2.datetimerange') {\n      if (resolution.values) {\n        if (resolution.values.length === 1) {\n          const resValue = resolution.values[0];\n          const result = {\n            type: resValue.type,\n            timex: resValue.timex\n          };\n          if (resValue.value) {\n            result.strValue = resValue.value;\n            result.date = new Date(resValue.value);\n          } else if (resValue.start) {\n            result.start = new Date(resValue.start);\n            result.end = new Date(resValue.end);\n            result.date = new Date(resValue.start);\n          }\n          return result;\n        }\n        if (resolution.values.length === 2) {\n          const result = {\n            type: 'interval',\n            timex: resolution.values[0].timex\n          };\n          if (resolution.values[0].value) {\n            result.strPastValue = resolution.values[0].value;\n            result.pastDate = new Date(result.strPastValue);\n          }\n          if (resolution.values[0].start) {\n            result.strPastStartValue = resolution.values[0].start;\n            result.pastStartDate = new Date(result.strPastStartValue);\n          }\n          if (resolution.values[0].end) {\n            result.strPastEndValue = resolution.values[0].end;\n            result.pastEndDate = new Date(result.strPastEndValue);\n          }\n          if (resolution.values[1].value) {\n            result.strFutureValue = resolution.values[1].value;\n            result.futureDate = new Date(result.strFutureValue);\n          }\n          if (resolution.values[1].start) {\n            result.strFutureStartValue = resolution.values[1].start;\n            result.futureStartDate = new Date(result.strFutureStartValue);\n          }\n          if (resolution.values[1].end) {\n            result.strFutureEndValue = resolution.values[1].end;\n            result.futureEndDate = new Date(result.strFutureEndValue);\n          }\n          return result;\n        }\n      }\n    }\n    if (resolution.unit) {\n      const srcUnit = resolution.unit;\n      resolution.srcUnit = srcUnit;\n      resolution.unit = this.translate(srcUnit, locale);\n      if (resolution.srcUnit === resolution.unit) {\n        resolution.srcUnit = this.inverseTranslate(resolution.srcUnit, locale);\n      }\n    }\n    if (resolution.srcUnit) {\n      return {\n        strValue: resolution.value,\n        value: Number.parseFloat(resolution.value),\n        unit: resolution.unit || resolution.srcUnit,\n        localeUnit: resolution.srcUnit\n      };\n    }\n    return resolution;\n  }\n  prereduceEdges(edges) {\n    for (let i = 0, l = edges.length; i < l; i += 1) {\n      const edge = edges[i];\n      if (!edge.discarded) {\n        for (let j = i + 1; j < l; j += 1) {\n          const other = edges[j];\n          if (!other.discarded) {\n            if (other.start === edge.start && other.end === edge.end) {\n              if (other.entity === 'number' && edge.entity === 'ordinal') {\n                other.discarded = true;\n              } else if (other.entity === edge.entity && other.accuracy === edge.accuracy && (!edge.resolution && !other.resolution || edge.resolution && other.resolution && edge.resolution.subtype === other.resolution.subtype)) {\n                other.discarded = true;\n              } else if (other.entity === 'ordinal' && edge.entity === 'number') {\n                edge.discarded = true;\n              } else if (other.entity === edge.entity && edge.entity === 'number') {\n                if ((other.sourceText.includes(',') || other.sourceText.includes('.')) && parseFloat(other.sourceText.replace(',', '.')) !== parseFloat(other.resolution.strValue.replace(',', '.'))) {\n                  other.discarded = true;\n                }\n                if ((edge.sourceText.includes(',') || edge.sourceText.includes('.')) && parseFloat(edge.sourceText.replace(',', '.')) !== parseFloat(edge.resolution.strValue.replace(',', '.'))) {\n                  edge.discarded = true;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    const result = [];\n    for (let i = 0, l = edges.length; i < l; i += 1) {\n      if (!edges[i].discarded) {\n        result.push(edges[i]);\n      }\n    }\n    return result;\n  }\n  findBuiltinEntities(utterance, locale, srcBuiltins) {\n    const result = [];\n    const source = [];\n    const culture = getCulture(locale);\n    const builtins = srcBuiltins || this.settings.builtins;\n    builtins.forEach(name => {\n      try {\n        const entities = name === 'Currency' && locale === 'pt' ? Recognizers[`recognize${name}`](utterance, getCulture('en')) : Recognizers[`recognize${name}`](utterance, culture);\n        if (name === 'Number' && locale !== 'en') {\n          entities.push(...Recognizers.recognizeNumber(utterance, getCulture('en')));\n        }\n        for (let i = 0; i < entities.length; i += 1) {\n          const entity = entities[i];\n          let entityName = entity.typeName;\n          const index = entityName.lastIndexOf('.');\n          if (index !== -1) {\n            entityName = entityName.slice(index + 1);\n          }\n          entity.entity = entityName;\n          source.push(entity);\n          if (this.settings.builtinAllowList[entityName]) {\n            const text = utterance.slice(entity.start, entity.end + 1);\n            const accuracy = 0.95;\n            const edge = {\n              start: entity.start,\n              end: entity.end,\n              len: entity.end - entity.start + 1,\n              accuracy,\n              sourceText: text,\n              utteranceText: text,\n              entity: entity.entity,\n              rawEntity: entity.typeName\n            };\n            const resolution = this.calculateResolution(entity, locale);\n            if (resolution) {\n              edge.resolution = resolution;\n            }\n            result.push(edge);\n          }\n        }\n      } catch (err) {\n        //\n      }\n    });\n    const reducedResult = this.prereduceEdges(result);\n    return {\n      edges: reducedResult,\n      source\n    };\n  }\n  extract(srcInput) {\n    const input = srcInput;\n    const entities = this.findBuiltinEntities(input.text || input.utterance, input.locale, input.builtins);\n    if (!input.edges) {\n      input.edges = [];\n    }\n    if (!input.sourceEntities) {\n      input.sourceEntities = [];\n    }\n    for (let i = 0; i < entities.edges.length; i += 1) {\n      input.edges.push(entities.edges[i]);\n    }\n    for (let i = 0; i < entities.source.length; i += 1) {\n      input.sourceEntities.push(entities.source[i]);\n    }\n    return input;\n  }\n  run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    const extractor = this.container.get(`extract-builtin-${locale}`) || this;\n    return extractor.extract(input);\n  }\n}\nmodule.exports = BuiltinMicrosoft;","map":{"version":3,"names":["Clonable","defaultContainer","require","Recognizers","BuiltinDictionary","BuiltinInverse","cultures","bn","el","en","hi","fa","gl","pt","sv","tl","ja","ar","hy","eu","ca","cs","da","ga","ta","uk","zh","getCulture","locale","result","BuiltinMicrosoft","constructor","settings","arguments","length","undefined","container","applySettings","tag","registerDefault","getConfiguration","builtinAllowList","i","allowList","registerConfiguration","builtins","translate","str","translation","inverseTranslate","calculateResolution","entity","resolution","includes","typeName","resValue","value","replace","Number","parseFloat","strValue","subtype","values","type","timex","date","Date","start","end","strPastValue","pastDate","strPastStartValue","pastStartDate","strPastEndValue","pastEndDate","strFutureValue","futureDate","strFutureStartValue","futureStartDate","strFutureEndValue","futureEndDate","unit","srcUnit","localeUnit","prereduceEdges","edges","l","edge","discarded","j","other","accuracy","sourceText","push","findBuiltinEntities","utterance","srcBuiltins","source","culture","forEach","name","entities","recognizeNumber","entityName","index","lastIndexOf","slice","text","len","utteranceText","rawEntity","err","reducedResult","extract","srcInput","input","sourceEntities","run","extractor","get","module","exports"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/moteur-rech/node_modules/@nlpjs/builtin-microsoft/src/builtin-microsoft.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable, defaultContainer } = require('@nlpjs/core');\nconst Recognizers = require('@microsoft/recognizers-text-suite');\nconst BuiltinDictionary = require('./builtin-dictionary.json');\nconst BuiltinInverse = require('./builtin-inverse.json');\n\nconst cultures = {\n  bn: 'bn-bd',\n  el: 'el-gr',\n  en: 'en-us',\n  hi: 'hi-in',\n  fa: 'fa-ir',\n  gl: 'gl-es',\n  pt: 'pt-br',\n  sv: 'sv-se',\n  tl: 'tl-ph',\n  ja: 'ja-jp',\n  ar: 'ar-ae',\n  hy: 'hy-am',\n  eu: 'eu-es',\n  ca: 'ca-es',\n  cs: 'cs-cz',\n  da: 'da-dk',\n  ga: 'ga-ie',\n  ta: 'ta-in',\n  uk: 'uk-ua',\n  zh: 'zh-cn',\n};\n\nfunction getCulture(locale) {\n  const result = cultures[locale];\n  if (result) {\n    return result;\n  }\n  return locale ? `${locale}-${locale}` : 'en-us';\n}\n\nclass BuiltinMicrosoft extends Clonable {\n  constructor(settings = {}, container = defaultContainer) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = `builtin-microsoft`;\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.settings.builtinAllowList = {};\n    for (let i = 0; i < this.settings.allowList.length; i += 1) {\n      this.settings.builtinAllowList[this.settings.allowList[i]] = 1;\n    }\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration(\n      'builtin-microsoft',\n      {\n        builtins: [\n          'Number',\n          'Ordinal',\n          'Percentage',\n          'Age',\n          'Currency',\n          'Dimension',\n          'Temperature',\n          'DateTime',\n          'PhoneNumber',\n          'IpAddress',\n          'Boolean',\n          'Email',\n          'Hashtag',\n          'URL',\n        ],\n        allowList: [\n          'age',\n          'currency',\n          'dimension',\n          'temperature',\n          'number',\n          'numberrange',\n          'ordinal',\n          'percentage',\n          'email',\n          'hashtag',\n          'ip',\n          'mention',\n          'phonenumber',\n          'url',\n          'date',\n          'daterange',\n          'datetime',\n          'datetimealt',\n          'time',\n          'set',\n          'timerange',\n          'timezone',\n          'boolean',\n          'duration',\n          'datetimerange',\n        ],\n      },\n      false\n    );\n  }\n\n  translate(str, locale) {\n    if (BuiltinDictionary[locale]) {\n      const translation = BuiltinDictionary[locale][str];\n      return translation !== '' ? translation : str;\n    }\n    return str;\n  }\n\n  inverseTranslate(str, locale) {\n    if (BuiltinInverse[locale]) {\n      const translation = BuiltinInverse[locale][str];\n      if (translation && translation.length > 0) {\n        return translation[0];\n      }\n    }\n    return str;\n  }\n\n  calculateResolution(entity, locale) {\n    const { resolution } = entity;\n    if (['number', 'ordinal', 'percentage'].includes(entity.typeName)) {\n      let resValue = resolution.value;\n      if (resValue) {\n        resValue = resValue.replace(',', '.');\n      }\n      const value = Number.parseFloat(resValue);\n      return {\n        strValue: resValue,\n        value,\n        subtype: value % 1 === 0 ? 'integer' : 'float',\n      };\n    }\n    if (!resolution) {\n      return undefined;\n    }\n    if (\n      entity.typeName === 'datetimeV2.date' ||\n      entity.typeName === 'datetimeV2.daterange' ||\n      entity.typeName === 'datetimeV2.datetimerange'\n    ) {\n      if (resolution.values) {\n        if (resolution.values.length === 1) {\n          const resValue = resolution.values[0];\n          const result = {\n            type: resValue.type,\n            timex: resValue.timex,\n          };\n          if (resValue.value) {\n            result.strValue = resValue.value;\n            result.date = new Date(resValue.value);\n          } else if (resValue.start) {\n            result.start = new Date(resValue.start);\n            result.end = new Date(resValue.end);\n            result.date = new Date(resValue.start);\n          }\n          return result;\n        }\n        if (resolution.values.length === 2) {\n          const result = {\n            type: 'interval',\n            timex: resolution.values[0].timex,\n          };\n          if (resolution.values[0].value) {\n            result.strPastValue = resolution.values[0].value;\n            result.pastDate = new Date(result.strPastValue);\n          }\n          if (resolution.values[0].start) {\n            result.strPastStartValue = resolution.values[0].start;\n            result.pastStartDate = new Date(result.strPastStartValue);\n          }\n          if (resolution.values[0].end) {\n            result.strPastEndValue = resolution.values[0].end;\n            result.pastEndDate = new Date(result.strPastEndValue);\n          }\n          if (resolution.values[1].value) {\n            result.strFutureValue = resolution.values[1].value;\n            result.futureDate = new Date(result.strFutureValue);\n          }\n          if (resolution.values[1].start) {\n            result.strFutureStartValue = resolution.values[1].start;\n            result.futureStartDate = new Date(result.strFutureStartValue);\n          }\n          if (resolution.values[1].end) {\n            result.strFutureEndValue = resolution.values[1].end;\n            result.futureEndDate = new Date(result.strFutureEndValue);\n          }\n          return result;\n        }\n      }\n    }\n    if (resolution.unit) {\n      const srcUnit = resolution.unit;\n      resolution.srcUnit = srcUnit;\n      resolution.unit = this.translate(srcUnit, locale);\n      if (resolution.srcUnit === resolution.unit) {\n        resolution.srcUnit = this.inverseTranslate(resolution.srcUnit, locale);\n      }\n    }\n    if (resolution.srcUnit) {\n      return {\n        strValue: resolution.value,\n        value: Number.parseFloat(resolution.value),\n        unit: resolution.unit || resolution.srcUnit,\n        localeUnit: resolution.srcUnit,\n      };\n    }\n    return resolution;\n  }\n\n  prereduceEdges(edges) {\n    for (let i = 0, l = edges.length; i < l; i += 1) {\n      const edge = edges[i];\n      if (!edge.discarded) {\n        for (let j = i + 1; j < l; j += 1) {\n          const other = edges[j];\n          if (!other.discarded) {\n            if (other.start === edge.start && other.end === edge.end) {\n              if (other.entity === 'number' && edge.entity === 'ordinal') {\n                other.discarded = true;\n              } else if (\n                other.entity === edge.entity &&\n                other.accuracy === edge.accuracy &&\n                ((!edge.resolution && !other.resolution) ||\n                  (edge.resolution &&\n                    other.resolution &&\n                    edge.resolution.subtype === other.resolution.subtype))\n              ) {\n                other.discarded = true;\n              } else if (\n                other.entity === 'ordinal' &&\n                edge.entity === 'number'\n              ) {\n                edge.discarded = true;\n              } else if (\n                other.entity === edge.entity &&\n                edge.entity === 'number'\n              ) {\n                if (\n                  (other.sourceText.includes(',') ||\n                    other.sourceText.includes('.')) &&\n                  parseFloat(other.sourceText.replace(',', '.')) !==\n                    parseFloat(other.resolution.strValue.replace(',', '.'))\n                ) {\n                  other.discarded = true;\n                }\n                if (\n                  (edge.sourceText.includes(',') ||\n                    edge.sourceText.includes('.')) &&\n                  parseFloat(edge.sourceText.replace(',', '.')) !==\n                    parseFloat(edge.resolution.strValue.replace(',', '.'))\n                ) {\n                  edge.discarded = true;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    const result = [];\n    for (let i = 0, l = edges.length; i < l; i += 1) {\n      if (!edges[i].discarded) {\n        result.push(edges[i]);\n      }\n    }\n    return result;\n  }\n\n  findBuiltinEntities(utterance, locale, srcBuiltins) {\n    const result = [];\n    const source = [];\n    const culture = getCulture(locale);\n    const builtins = srcBuiltins || this.settings.builtins;\n    builtins.forEach((name) => {\n      try {\n        const entities =\n          name === 'Currency' && locale === 'pt'\n            ? Recognizers[`recognize${name}`](utterance, getCulture('en'))\n            : Recognizers[`recognize${name}`](utterance, culture);\n        if (name === 'Number' && locale !== 'en') {\n          entities.push(\n            ...Recognizers.recognizeNumber(utterance, getCulture('en'))\n          );\n        }\n        for (let i = 0; i < entities.length; i += 1) {\n          const entity = entities[i];\n          let entityName = entity.typeName;\n          const index = entityName.lastIndexOf('.');\n          if (index !== -1) {\n            entityName = entityName.slice(index + 1);\n          }\n          entity.entity = entityName;\n          source.push(entity);\n          if (this.settings.builtinAllowList[entityName]) {\n            const text = utterance.slice(entity.start, entity.end + 1);\n            const accuracy = 0.95;\n            const edge = {\n              start: entity.start,\n              end: entity.end,\n              len: entity.end - entity.start + 1,\n              accuracy,\n              sourceText: text,\n              utteranceText: text,\n              entity: entity.entity,\n              rawEntity: entity.typeName,\n            };\n            const resolution = this.calculateResolution(entity, locale);\n            if (resolution) {\n              edge.resolution = resolution;\n            }\n            result.push(edge);\n          }\n        }\n      } catch (err) {\n        //\n      }\n    });\n    const reducedResult = this.prereduceEdges(result);\n    return {\n      edges: reducedResult,\n      source,\n    };\n  }\n\n  extract(srcInput) {\n    const input = srcInput;\n    const entities = this.findBuiltinEntities(\n      input.text || input.utterance,\n      input.locale,\n      input.builtins\n    );\n    if (!input.edges) {\n      input.edges = [];\n    }\n    if (!input.sourceEntities) {\n      input.sourceEntities = [];\n    }\n    for (let i = 0; i < entities.edges.length; i += 1) {\n      input.edges.push(entities.edges[i]);\n    }\n    for (let i = 0; i < entities.source.length; i += 1) {\n      input.sourceEntities.push(entities.source[i]);\n    }\n    return input;\n  }\n\n  run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    const extractor = this.container.get(`extract-builtin-${locale}`) || this;\n    return extractor.extract(input);\n  }\n}\n\nmodule.exports = BuiltinMicrosoft;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA,QAAQ;EAAEC;AAAiB,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC7D,MAAMC,WAAW,GAAGD,OAAO,CAAC,mCAAmC,CAAC;AAChE,MAAME,iBAAiB,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAC9D,MAAMG,cAAc,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AAExD,MAAMI,QAAQ,GAAG;EACfC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE;AACN,CAAC;AAED,SAASC,UAAUA,CAACC,MAAM,EAAE;EAC1B,MAAMC,MAAM,GAAGvB,QAAQ,CAACsB,MAAM,CAAC;EAC/B,IAAIC,MAAM,EAAE;IACV,OAAOA,MAAM;EACf;EACA,OAAOD,MAAM,GAAI,GAAEA,MAAO,IAAGA,MAAO,EAAC,GAAG,OAAO;AACjD;AAEA,MAAME,gBAAgB,SAAS9B,QAAQ,CAAC;EACtC+B,WAAWA,CAAA,EAA8C;IAAA,IAA7CC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,SAAS,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGhC,gBAAgB;IACrD,KAAK,CACH;MACE+B,QAAQ,EAAE,CAAC,CAAC;MACZI,SAAS,EAAEJ,QAAQ,CAACI,SAAS,IAAIA;IACnC,CAAC,EACDA,SAAS,CACV;IACD,IAAI,CAACC,aAAa,CAAC,IAAI,CAACL,QAAQ,EAAEA,QAAQ,CAAC;IAC3C,IAAI,CAAC,IAAI,CAACA,QAAQ,CAACM,GAAG,EAAE;MACtB,IAAI,CAACN,QAAQ,CAACM,GAAG,GAAI,mBAAkB;IACzC;IACA,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACF,aAAa,CAChB,IAAI,CAACL,QAAQ,EACb,IAAI,CAACI,SAAS,CAACI,gBAAgB,CAAC,IAAI,CAACR,QAAQ,CAACM,GAAG,CAAC,CACnD;IACD,IAAI,CAACN,QAAQ,CAACS,gBAAgB,GAAG,CAAC,CAAC;IACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACV,QAAQ,CAACW,SAAS,CAACT,MAAM,EAAEQ,CAAC,IAAI,CAAC,EAAE;MAC1D,IAAI,CAACV,QAAQ,CAACS,gBAAgB,CAAC,IAAI,CAACT,QAAQ,CAACW,SAAS,CAACD,CAAC,CAAC,CAAC,GAAG,CAAC;IAChE;EACF;EAEAH,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACH,SAAS,CAACQ,qBAAqB,CAClC,mBAAmB,EACnB;MACEC,QAAQ,EAAE,CACR,QAAQ,EACR,SAAS,EACT,YAAY,EACZ,KAAK,EACL,UAAU,EACV,WAAW,EACX,aAAa,EACb,UAAU,EACV,aAAa,EACb,WAAW,EACX,SAAS,EACT,OAAO,EACP,SAAS,EACT,KAAK,CACN;MACDF,SAAS,EAAE,CACT,KAAK,EACL,UAAU,EACV,WAAW,EACX,aAAa,EACb,QAAQ,EACR,aAAa,EACb,SAAS,EACT,YAAY,EACZ,OAAO,EACP,SAAS,EACT,IAAI,EACJ,SAAS,EACT,aAAa,EACb,KAAK,EACL,MAAM,EACN,WAAW,EACX,UAAU,EACV,aAAa,EACb,MAAM,EACN,KAAK,EACL,WAAW,EACX,UAAU,EACV,SAAS,EACT,UAAU,EACV,eAAe;IAEnB,CAAC,EACD,KAAK,CACN;EACH;EAEAG,SAASA,CAACC,GAAG,EAAEnB,MAAM,EAAE;IACrB,IAAIxB,iBAAiB,CAACwB,MAAM,CAAC,EAAE;MAC7B,MAAMoB,WAAW,GAAG5C,iBAAiB,CAACwB,MAAM,CAAC,CAACmB,GAAG,CAAC;MAClD,OAAOC,WAAW,KAAK,EAAE,GAAGA,WAAW,GAAGD,GAAG;IAC/C;IACA,OAAOA,GAAG;EACZ;EAEAE,gBAAgBA,CAACF,GAAG,EAAEnB,MAAM,EAAE;IAC5B,IAAIvB,cAAc,CAACuB,MAAM,CAAC,EAAE;MAC1B,MAAMoB,WAAW,GAAG3C,cAAc,CAACuB,MAAM,CAAC,CAACmB,GAAG,CAAC;MAC/C,IAAIC,WAAW,IAAIA,WAAW,CAACd,MAAM,GAAG,CAAC,EAAE;QACzC,OAAOc,WAAW,CAAC,CAAC,CAAC;MACvB;IACF;IACA,OAAOD,GAAG;EACZ;EAEAG,mBAAmBA,CAACC,MAAM,EAAEvB,MAAM,EAAE;IAClC,MAAM;MAAEwB;IAAW,CAAC,GAAGD,MAAM;IAC7B,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,YAAY,CAAC,CAACE,QAAQ,CAACF,MAAM,CAACG,QAAQ,CAAC,EAAE;MACjE,IAAIC,QAAQ,GAAGH,UAAU,CAACI,KAAK;MAC/B,IAAID,QAAQ,EAAE;QACZA,QAAQ,GAAGA,QAAQ,CAACE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;MACvC;MACA,MAAMD,KAAK,GAAGE,MAAM,CAACC,UAAU,CAACJ,QAAQ,CAAC;MACzC,OAAO;QACLK,QAAQ,EAAEL,QAAQ;QAClBC,KAAK;QACLK,OAAO,EAAEL,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG;MACzC,CAAC;IACH;IACA,IAAI,CAACJ,UAAU,EAAE;MACf,OAAOjB,SAAS;IAClB;IACA,IACEgB,MAAM,CAACG,QAAQ,KAAK,iBAAiB,IACrCH,MAAM,CAACG,QAAQ,KAAK,sBAAsB,IAC1CH,MAAM,CAACG,QAAQ,KAAK,0BAA0B,EAC9C;MACA,IAAIF,UAAU,CAACU,MAAM,EAAE;QACrB,IAAIV,UAAU,CAACU,MAAM,CAAC5B,MAAM,KAAK,CAAC,EAAE;UAClC,MAAMqB,QAAQ,GAAGH,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC;UACrC,MAAMjC,MAAM,GAAG;YACbkC,IAAI,EAAER,QAAQ,CAACQ,IAAI;YACnBC,KAAK,EAAET,QAAQ,CAACS;UAClB,CAAC;UACD,IAAIT,QAAQ,CAACC,KAAK,EAAE;YAClB3B,MAAM,CAAC+B,QAAQ,GAAGL,QAAQ,CAACC,KAAK;YAChC3B,MAAM,CAACoC,IAAI,GAAG,IAAIC,IAAI,CAACX,QAAQ,CAACC,KAAK,CAAC;UACxC,CAAC,MAAM,IAAID,QAAQ,CAACY,KAAK,EAAE;YACzBtC,MAAM,CAACsC,KAAK,GAAG,IAAID,IAAI,CAACX,QAAQ,CAACY,KAAK,CAAC;YACvCtC,MAAM,CAACuC,GAAG,GAAG,IAAIF,IAAI,CAACX,QAAQ,CAACa,GAAG,CAAC;YACnCvC,MAAM,CAACoC,IAAI,GAAG,IAAIC,IAAI,CAACX,QAAQ,CAACY,KAAK,CAAC;UACxC;UACA,OAAOtC,MAAM;QACf;QACA,IAAIuB,UAAU,CAACU,MAAM,CAAC5B,MAAM,KAAK,CAAC,EAAE;UAClC,MAAML,MAAM,GAAG;YACbkC,IAAI,EAAE,UAAU;YAChBC,KAAK,EAAEZ,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACE;UAC9B,CAAC;UACD,IAAIZ,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACN,KAAK,EAAE;YAC9B3B,MAAM,CAACwC,YAAY,GAAGjB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACN,KAAK;YAChD3B,MAAM,CAACyC,QAAQ,GAAG,IAAIJ,IAAI,CAACrC,MAAM,CAACwC,YAAY,CAAC;UACjD;UACA,IAAIjB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACK,KAAK,EAAE;YAC9BtC,MAAM,CAAC0C,iBAAiB,GAAGnB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACK,KAAK;YACrDtC,MAAM,CAAC2C,aAAa,GAAG,IAAIN,IAAI,CAACrC,MAAM,CAAC0C,iBAAiB,CAAC;UAC3D;UACA,IAAInB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACM,GAAG,EAAE;YAC5BvC,MAAM,CAAC4C,eAAe,GAAGrB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACM,GAAG;YACjDvC,MAAM,CAAC6C,WAAW,GAAG,IAAIR,IAAI,CAACrC,MAAM,CAAC4C,eAAe,CAAC;UACvD;UACA,IAAIrB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACN,KAAK,EAAE;YAC9B3B,MAAM,CAAC8C,cAAc,GAAGvB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACN,KAAK;YAClD3B,MAAM,CAAC+C,UAAU,GAAG,IAAIV,IAAI,CAACrC,MAAM,CAAC8C,cAAc,CAAC;UACrD;UACA,IAAIvB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACK,KAAK,EAAE;YAC9BtC,MAAM,CAACgD,mBAAmB,GAAGzB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACK,KAAK;YACvDtC,MAAM,CAACiD,eAAe,GAAG,IAAIZ,IAAI,CAACrC,MAAM,CAACgD,mBAAmB,CAAC;UAC/D;UACA,IAAIzB,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACM,GAAG,EAAE;YAC5BvC,MAAM,CAACkD,iBAAiB,GAAG3B,UAAU,CAACU,MAAM,CAAC,CAAC,CAAC,CAACM,GAAG;YACnDvC,MAAM,CAACmD,aAAa,GAAG,IAAId,IAAI,CAACrC,MAAM,CAACkD,iBAAiB,CAAC;UAC3D;UACA,OAAOlD,MAAM;QACf;MACF;IACF;IACA,IAAIuB,UAAU,CAAC6B,IAAI,EAAE;MACnB,MAAMC,OAAO,GAAG9B,UAAU,CAAC6B,IAAI;MAC/B7B,UAAU,CAAC8B,OAAO,GAAGA,OAAO;MAC5B9B,UAAU,CAAC6B,IAAI,GAAG,IAAI,CAACnC,SAAS,CAACoC,OAAO,EAAEtD,MAAM,CAAC;MACjD,IAAIwB,UAAU,CAAC8B,OAAO,KAAK9B,UAAU,CAAC6B,IAAI,EAAE;QAC1C7B,UAAU,CAAC8B,OAAO,GAAG,IAAI,CAACjC,gBAAgB,CAACG,UAAU,CAAC8B,OAAO,EAAEtD,MAAM,CAAC;MACxE;IACF;IACA,IAAIwB,UAAU,CAAC8B,OAAO,EAAE;MACtB,OAAO;QACLtB,QAAQ,EAAER,UAAU,CAACI,KAAK;QAC1BA,KAAK,EAAEE,MAAM,CAACC,UAAU,CAACP,UAAU,CAACI,KAAK,CAAC;QAC1CyB,IAAI,EAAE7B,UAAU,CAAC6B,IAAI,IAAI7B,UAAU,CAAC8B,OAAO;QAC3CC,UAAU,EAAE/B,UAAU,CAAC8B;MACzB,CAAC;IACH;IACA,OAAO9B,UAAU;EACnB;EAEAgC,cAAcA,CAACC,KAAK,EAAE;IACpB,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAE4C,CAAC,GAAGD,KAAK,CAACnD,MAAM,EAAEQ,CAAC,GAAG4C,CAAC,EAAE5C,CAAC,IAAI,CAAC,EAAE;MAC/C,MAAM6C,IAAI,GAAGF,KAAK,CAAC3C,CAAC,CAAC;MACrB,IAAI,CAAC6C,IAAI,CAACC,SAAS,EAAE;QACnB,KAAK,IAAIC,CAAC,GAAG/C,CAAC,GAAG,CAAC,EAAE+C,CAAC,GAAGH,CAAC,EAAEG,CAAC,IAAI,CAAC,EAAE;UACjC,MAAMC,KAAK,GAAGL,KAAK,CAACI,CAAC,CAAC;UACtB,IAAI,CAACC,KAAK,CAACF,SAAS,EAAE;YACpB,IAAIE,KAAK,CAACvB,KAAK,KAAKoB,IAAI,CAACpB,KAAK,IAAIuB,KAAK,CAACtB,GAAG,KAAKmB,IAAI,CAACnB,GAAG,EAAE;cACxD,IAAIsB,KAAK,CAACvC,MAAM,KAAK,QAAQ,IAAIoC,IAAI,CAACpC,MAAM,KAAK,SAAS,EAAE;gBAC1DuC,KAAK,CAACF,SAAS,GAAG,IAAI;cACxB,CAAC,MAAM,IACLE,KAAK,CAACvC,MAAM,KAAKoC,IAAI,CAACpC,MAAM,IAC5BuC,KAAK,CAACC,QAAQ,KAAKJ,IAAI,CAACI,QAAQ,KAC9B,CAACJ,IAAI,CAACnC,UAAU,IAAI,CAACsC,KAAK,CAACtC,UAAU,IACpCmC,IAAI,CAACnC,UAAU,IACdsC,KAAK,CAACtC,UAAU,IAChBmC,IAAI,CAACnC,UAAU,CAACS,OAAO,KAAK6B,KAAK,CAACtC,UAAU,CAACS,OAAQ,CAAC,EAC1D;gBACA6B,KAAK,CAACF,SAAS,GAAG,IAAI;cACxB,CAAC,MAAM,IACLE,KAAK,CAACvC,MAAM,KAAK,SAAS,IAC1BoC,IAAI,CAACpC,MAAM,KAAK,QAAQ,EACxB;gBACAoC,IAAI,CAACC,SAAS,GAAG,IAAI;cACvB,CAAC,MAAM,IACLE,KAAK,CAACvC,MAAM,KAAKoC,IAAI,CAACpC,MAAM,IAC5BoC,IAAI,CAACpC,MAAM,KAAK,QAAQ,EACxB;gBACA,IACE,CAACuC,KAAK,CAACE,UAAU,CAACvC,QAAQ,CAAC,GAAG,CAAC,IAC7BqC,KAAK,CAACE,UAAU,CAACvC,QAAQ,CAAC,GAAG,CAAC,KAChCM,UAAU,CAAC+B,KAAK,CAACE,UAAU,CAACnC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,KAC5CE,UAAU,CAAC+B,KAAK,CAACtC,UAAU,CAACQ,QAAQ,CAACH,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EACzD;kBACAiC,KAAK,CAACF,SAAS,GAAG,IAAI;gBACxB;gBACA,IACE,CAACD,IAAI,CAACK,UAAU,CAACvC,QAAQ,CAAC,GAAG,CAAC,IAC5BkC,IAAI,CAACK,UAAU,CAACvC,QAAQ,CAAC,GAAG,CAAC,KAC/BM,UAAU,CAAC4B,IAAI,CAACK,UAAU,CAACnC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,KAC3CE,UAAU,CAAC4B,IAAI,CAACnC,UAAU,CAACQ,QAAQ,CAACH,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EACxD;kBACA8B,IAAI,CAACC,SAAS,GAAG,IAAI;gBACvB;cACF;YACF;UACF;QACF;MACF;IACF;IACA,MAAM3D,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAE4C,CAAC,GAAGD,KAAK,CAACnD,MAAM,EAAEQ,CAAC,GAAG4C,CAAC,EAAE5C,CAAC,IAAI,CAAC,EAAE;MAC/C,IAAI,CAAC2C,KAAK,CAAC3C,CAAC,CAAC,CAAC8C,SAAS,EAAE;QACvB3D,MAAM,CAACgE,IAAI,CAACR,KAAK,CAAC3C,CAAC,CAAC,CAAC;MACvB;IACF;IACA,OAAOb,MAAM;EACf;EAEAiE,mBAAmBA,CAACC,SAAS,EAAEnE,MAAM,EAAEoE,WAAW,EAAE;IAClD,MAAMnE,MAAM,GAAG,EAAE;IACjB,MAAMoE,MAAM,GAAG,EAAE;IACjB,MAAMC,OAAO,GAAGvE,UAAU,CAACC,MAAM,CAAC;IAClC,MAAMiB,QAAQ,GAAGmD,WAAW,IAAI,IAAI,CAAChE,QAAQ,CAACa,QAAQ;IACtDA,QAAQ,CAACsD,OAAO,CAAEC,IAAI,IAAK;MACzB,IAAI;QACF,MAAMC,QAAQ,GACZD,IAAI,KAAK,UAAU,IAAIxE,MAAM,KAAK,IAAI,GAClCzB,WAAW,CAAE,YAAWiG,IAAK,EAAC,CAAC,CAACL,SAAS,EAAEpE,UAAU,CAAC,IAAI,CAAC,CAAC,GAC5DxB,WAAW,CAAE,YAAWiG,IAAK,EAAC,CAAC,CAACL,SAAS,EAAEG,OAAO,CAAC;QACzD,IAAIE,IAAI,KAAK,QAAQ,IAAIxE,MAAM,KAAK,IAAI,EAAE;UACxCyE,QAAQ,CAACR,IAAI,CACX,GAAG1F,WAAW,CAACmG,eAAe,CAACP,SAAS,EAAEpE,UAAU,CAAC,IAAI,CAAC,CAAC,CAC5D;QACH;QACA,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2D,QAAQ,CAACnE,MAAM,EAAEQ,CAAC,IAAI,CAAC,EAAE;UAC3C,MAAMS,MAAM,GAAGkD,QAAQ,CAAC3D,CAAC,CAAC;UAC1B,IAAI6D,UAAU,GAAGpD,MAAM,CAACG,QAAQ;UAChC,MAAMkD,KAAK,GAAGD,UAAU,CAACE,WAAW,CAAC,GAAG,CAAC;UACzC,IAAID,KAAK,KAAK,CAAC,CAAC,EAAE;YAChBD,UAAU,GAAGA,UAAU,CAACG,KAAK,CAACF,KAAK,GAAG,CAAC,CAAC;UAC1C;UACArD,MAAM,CAACA,MAAM,GAAGoD,UAAU;UAC1BN,MAAM,CAACJ,IAAI,CAAC1C,MAAM,CAAC;UACnB,IAAI,IAAI,CAACnB,QAAQ,CAACS,gBAAgB,CAAC8D,UAAU,CAAC,EAAE;YAC9C,MAAMI,IAAI,GAAGZ,SAAS,CAACW,KAAK,CAACvD,MAAM,CAACgB,KAAK,EAAEhB,MAAM,CAACiB,GAAG,GAAG,CAAC,CAAC;YAC1D,MAAMuB,QAAQ,GAAG,IAAI;YACrB,MAAMJ,IAAI,GAAG;cACXpB,KAAK,EAAEhB,MAAM,CAACgB,KAAK;cACnBC,GAAG,EAAEjB,MAAM,CAACiB,GAAG;cACfwC,GAAG,EAAEzD,MAAM,CAACiB,GAAG,GAAGjB,MAAM,CAACgB,KAAK,GAAG,CAAC;cAClCwB,QAAQ;cACRC,UAAU,EAAEe,IAAI;cAChBE,aAAa,EAAEF,IAAI;cACnBxD,MAAM,EAAEA,MAAM,CAACA,MAAM;cACrB2D,SAAS,EAAE3D,MAAM,CAACG;YACpB,CAAC;YACD,MAAMF,UAAU,GAAG,IAAI,CAACF,mBAAmB,CAACC,MAAM,EAAEvB,MAAM,CAAC;YAC3D,IAAIwB,UAAU,EAAE;cACdmC,IAAI,CAACnC,UAAU,GAAGA,UAAU;YAC9B;YACAvB,MAAM,CAACgE,IAAI,CAACN,IAAI,CAAC;UACnB;QACF;MACF,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACZ;MAAA;IAEJ,CAAC,CAAC;IACF,MAAMC,aAAa,GAAG,IAAI,CAAC5B,cAAc,CAACvD,MAAM,CAAC;IACjD,OAAO;MACLwD,KAAK,EAAE2B,aAAa;MACpBf;IACF,CAAC;EACH;EAEAgB,OAAOA,CAACC,QAAQ,EAAE;IAChB,MAAMC,KAAK,GAAGD,QAAQ;IACtB,MAAMb,QAAQ,GAAG,IAAI,CAACP,mBAAmB,CACvCqB,KAAK,CAACR,IAAI,IAAIQ,KAAK,CAACpB,SAAS,EAC7BoB,KAAK,CAACvF,MAAM,EACZuF,KAAK,CAACtE,QAAQ,CACf;IACD,IAAI,CAACsE,KAAK,CAAC9B,KAAK,EAAE;MAChB8B,KAAK,CAAC9B,KAAK,GAAG,EAAE;IAClB;IACA,IAAI,CAAC8B,KAAK,CAACC,cAAc,EAAE;MACzBD,KAAK,CAACC,cAAc,GAAG,EAAE;IAC3B;IACA,KAAK,IAAI1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2D,QAAQ,CAAChB,KAAK,CAACnD,MAAM,EAAEQ,CAAC,IAAI,CAAC,EAAE;MACjDyE,KAAK,CAAC9B,KAAK,CAACQ,IAAI,CAACQ,QAAQ,CAAChB,KAAK,CAAC3C,CAAC,CAAC,CAAC;IACrC;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2D,QAAQ,CAACJ,MAAM,CAAC/D,MAAM,EAAEQ,CAAC,IAAI,CAAC,EAAE;MAClDyE,KAAK,CAACC,cAAc,CAACvB,IAAI,CAACQ,QAAQ,CAACJ,MAAM,CAACvD,CAAC,CAAC,CAAC;IAC/C;IACA,OAAOyE,KAAK;EACd;EAEAE,GAAGA,CAACH,QAAQ,EAAE;IACZ,MAAMC,KAAK,GAAGD,QAAQ;IACtB,MAAMtF,MAAM,GAAGuF,KAAK,CAACvF,MAAM,IAAI,IAAI;IACnC,MAAM0F,SAAS,GAAG,IAAI,CAAClF,SAAS,CAACmF,GAAG,CAAE,mBAAkB3F,MAAO,EAAC,CAAC,IAAI,IAAI;IACzE,OAAO0F,SAAS,CAACL,OAAO,CAACE,KAAK,CAAC;EACjC;AACF;AAEAK,MAAM,CAACC,OAAO,GAAG3F,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}