{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  Clonable\n} = require('@nlpjs/core');\nconst ExtractorEnum = require('./extractor-enum');\nconst ExtractorRegex = require('./extractor-regex');\nconst ExtractorTrim = require('./extractor-trim');\nconst ExtractorBuiltin = require('./extractor-builtin');\nconst {\n  TrimType\n} = require('./trim-types');\nfunction isObject(obj) {\n  return obj !== undefined && obj !== null && obj.constructor === Object;\n}\nclass Ner extends Clonable {\n  constructor() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    super({\n      settings: {},\n      container: settings.container || container\n    }, container);\n    this.applySettings(this.settings, settings);\n    this.applySettings(this.settings);\n    if (!this.settings.tag) {\n      this.settings.tag = `ner`;\n    }\n    this.registerDefault();\n    this.applySettings(this.settings, this.container.getConfiguration(this.settings.tag));\n    this.rules = {};\n    this.applySettings(this, {\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`)\n    });\n  }\n  registerDefault() {}\n  getRulesByName() {\n    let locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    let force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!this.rules[locale]) {\n      if (!force) {\n        return undefined;\n      }\n      this.rules[locale] = {};\n    }\n    if (!this.rules[locale][name]) {\n      if (!force) {\n        return undefined;\n      }\n      this.rules[locale][name] = {\n        name,\n        type: 'enum',\n        rules: []\n      };\n    }\n    return this.rules[locale][name];\n  }\n  addRule() {\n    let locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';\n    let name = arguments.length > 1 ? arguments[1] : undefined;\n    let type = arguments.length > 2 ? arguments[2] : undefined;\n    let rule = arguments.length > 3 ? arguments[3] : undefined;\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.addRule(locale[i], name, type, rule);\n      }\n    } else {\n      if (!this.rules[locale]) {\n        this.rules[locale] = {};\n      }\n      if (!this.rules[locale][name]) {\n        this.rules[locale][name] = {\n          name,\n          type,\n          rules: []\n        };\n      }\n      this.rules[locale][name].rules.push(rule);\n    }\n  }\n  asString(item) {\n    if (item) {\n      if (isObject(item)) {\n        return JSON.stringify(item);\n      }\n      if (item.toString) {\n        return item.toString();\n      }\n    }\n    return '';\n  }\n  findRule(rules, rule) {\n    const str = this.asString(rule);\n    for (let i = 0; i < rules.length; i += 1) {\n      if (this.asString(rules[i]) === str) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  removeRule() {\n    let locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';\n    let name = arguments.length > 1 ? arguments[1] : undefined;\n    let rule = arguments.length > 2 ? arguments[2] : undefined;\n    if (this.rules[locale]) {\n      if (this.rules[locale][name]) {\n        if (!rule) {\n          delete this.rules[locale][name];\n        } else {\n          const index = this.findRule(this.rules[locale][name].rules, rule);\n          if (index > -1) {\n            this.rules[locale][name].rules.splice(index, 1);\n          }\n        }\n      }\n    }\n  }\n  getRules() {\n    let locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';\n    const result = [];\n    if (this.rules[locale]) {\n      const keys = Object.keys(this.rules[locale]);\n      for (let i = 0; i < keys.length; i += 1) {\n        result.push(this.rules[locale][keys[i]]);\n      }\n    }\n    if (locale !== '*' && this.rules['*']) {\n      const keys = Object.keys(this.rules['*']);\n      for (let i = 0; i < keys.length; i += 1) {\n        result.push(this.rules['*'][keys[i]]);\n      }\n    }\n    return result;\n  }\n  decideRules(srcInput) {\n    const input = srcInput;\n    input.nerRules = this.getRules(input.locale || 'en');\n    return input;\n  }\n  getRuleOption(rules, option) {\n    for (let i = 0; i < rules.length; i += 1) {\n      if (rules[i].option === option) {\n        return rules[i];\n      }\n    }\n    return undefined;\n  }\n  addRuleOptionTexts(locale, name, option, srcTexts) {\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.addRuleOptionTexts(locale[i], name, option, srcTexts);\n      }\n    } else {\n      let texts = srcTexts || option;\n      if (!Array.isArray(texts)) {\n        texts = [texts];\n      }\n      const rules = this.getRulesByName(locale, name, true);\n      let ruleOption = this.getRuleOption(rules.rules, option);\n      if (!ruleOption) {\n        ruleOption = {\n          option,\n          texts\n        };\n        rules.rules.push(ruleOption);\n      } else {\n        const dict = {};\n        for (let i = 0; i < ruleOption.texts.length; i += 1) {\n          dict[ruleOption.texts[i]] = 1;\n        }\n        for (let i = 0; i < texts.length; i += 1) {\n          dict[texts[i]] = 1;\n        }\n        ruleOption.texts = Object.keys(dict);\n      }\n    }\n  }\n  removeRuleOptionTexts(locale, name, option, srcTexts) {\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.removeRuleOptionTexts(locale[i], name, option, srcTexts);\n      }\n    } else {\n      let texts = srcTexts || option;\n      if (!Array.isArray(texts)) {\n        texts = [texts];\n      }\n      const rules = this.getRulesByName(locale, name, false);\n      if (rules) {\n        const ruleOption = this.getRuleOption(rules.rules, option);\n        if (ruleOption) {\n          const dict = {};\n          for (let i = 0; i < ruleOption.texts.length; i += 1) {\n            dict[ruleOption.texts[i]] = 1;\n          }\n          for (let i = 0; i < texts.length; i += 1) {\n            delete dict[texts[i]];\n          }\n          ruleOption.texts = Object.keys(dict);\n        }\n      }\n    }\n  }\n  static str2regex(str) {\n    const index = str.lastIndexOf('/');\n    return new RegExp(str.slice(1, index), str.slice(index + 1));\n  }\n  static regex2str(regex) {\n    return regex.toString();\n  }\n  addRegexRule(locale, name, srcRegex) {\n    const regex = typeof srcRegex === 'string' ? Ner.str2regex(srcRegex) : srcRegex;\n    const globalFlag = 'g';\n    const fixedRegex = regex.flags.includes(globalFlag) ? regex : new RegExp(regex.source, `${regex.flags}${globalFlag}`);\n    this.addRule(locale, name, 'regex', fixedRegex);\n  }\n  addBetweenLastCondition(locale, name, srcLeftWords, srcRightWords) {\n    let srcOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    const options = {\n      ...srcOptions,\n      closest: true\n    };\n    this.addBetweenCondition(locale, name, srcLeftWords, srcRightWords, options);\n  }\n  addBetweenCondition(locale, name, srcLeftWords, srcRightWords, srcOptions) {\n    const options = srcOptions || {};\n    const leftWords = Array.isArray(srcLeftWords) ? srcLeftWords : [srcLeftWords];\n    const rightWords = Array.isArray(srcRightWords) ? srcRightWords : [srcRightWords];\n    const conditions = [];\n    for (let i = 0; i < leftWords.length; i += 1) {\n      for (let j = 0; j < rightWords.length; j += 1) {\n        const leftWord = options.noSpaces === true ? leftWords[i] : ` ${leftWords[i]} `;\n        const rightWord = options.noSpaces === true ? rightWords[j] : ` ${rightWords[j]} `;\n        let regex;\n        if (options.closest === true) {\n          regex = `${leftWord}(?!.*${leftWord}.*)(.*)${rightWord}`;\n        } else {\n          regex = `(?<=${leftWord})(.*)(?=${rightWord})`;\n        }\n        conditions.push(regex);\n      }\n    }\n    let regex = `/${conditions.join('|')}/g`;\n    if (options.caseSensitive !== true) {\n      regex += 'i';\n    }\n    const rule = {\n      type: 'between',\n      leftWords,\n      rightWords,\n      regex: Ner.str2regex(regex),\n      options\n    };\n    this.addRule(locale, name, 'trim', rule);\n  }\n  addPositionCondition(locale, name, position, srcWords, srcOptions) {\n    const options = srcOptions || {};\n    const words = Array.isArray(srcWords) ? srcWords : [srcWords];\n    const rule = {\n      type: position,\n      words,\n      options\n    };\n    this.addRule(locale, name, 'trim', rule);\n  }\n  addAfterCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.After, words, opts);\n  }\n  addAfterFirstCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.AfterFirst, words, opts);\n  }\n  addAfterLastCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.AfterLast, words, opts);\n  }\n  addBeforeCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.Before, words, opts);\n  }\n  addBeforeFirstCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.BeforeFirst, words, opts);\n  }\n  addBeforeLastCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.BeforeLast, words, opts);\n  }\n  reduceEdges(input) {\n    input.entities = input.edges;\n    delete input.edges;\n    delete input.nerRules;\n    return input;\n  }\n  async defaultPipelineProcess(input) {\n    if (!this.cache) {\n      this.cache = {\n        extractEnum: this.container.get('extract-enum'),\n        extractRegex: this.container.get('extract-regex'),\n        extractTrim: this.container.get('extract-trim'),\n        extractBuiltin: this.container.get('extract-builtin')\n      };\n      if (!this.cache.extractEnum) {\n        this.container.use(ExtractorEnum);\n        this.cache.extractEnum = this.container.get('extract-enum');\n      }\n      if (!this.cache.extractRegex) {\n        this.container.use(ExtractorRegex);\n        this.cache.extractRegex = this.container.get('extract-regex');\n      }\n      if (!this.cache.extractTrim) {\n        this.container.use(ExtractorTrim);\n        this.cache.extractTrim = this.container.get('extract-trim');\n      }\n      if (!this.cache.extractBuiltin) {\n        this.container.use(ExtractorBuiltin);\n        this.cache.extractBuiltin = this.container.get('extract-builtin');\n      }\n    }\n    let output = await this.decideRules(input);\n    if (this.cache.extractEnum) {\n      output = await this.cache.extractEnum.run(output);\n    }\n    if (this.cache.extractRegex) {\n      output = await this.cache.extractRegex.run(output);\n    }\n    if (this.cache.extractTrim) {\n      output = await this.cache.extractTrim.run(output);\n    }\n    if (this.cache.extractBuiltin) {\n      output = await this.cache.extractBuiltin.run(output);\n    }\n    output = await this.reduceEdges(output);\n    return output;\n  }\n  async process(srcInput) {\n    const input = {\n      threshold: this.settings.threshold || 0.8,\n      ...srcInput\n    };\n    let result;\n    if (input.locale) {\n      const pipeline = this.container.getPipeline(`${this.settings.tag}-${input.locale}-process`);\n      if (pipeline) {\n        result = await this.runPipeline(input, pipeline);\n      }\n    } else if (this.pipelineProcess) {\n      result = await this.runPipeline(input, this.pipelineProcess);\n    }\n    if (!result) {\n      result = await this.defaultPipelineProcess(input);\n    }\n    delete result.threshold;\n    return result;\n  }\n  nameToEntity(name) {\n    const preffix = this.settings.entityPreffix === undefined ? '@' : this.settings.entityPreffix;\n    const suffix = this.settings.entitySuffix === undefined ? '' : this.settings.entitySuffix;\n    return `${preffix}${name}${suffix}`;\n  }\n  entityToName(entity) {\n    if (!entity) {\n      return entity;\n    }\n    let name = entity;\n    const preffix = this.settings.entityPreffix === undefined ? '@' : this.settings.entityPreffix;\n    const suffix = this.settings.entitySuffix === undefined ? '' : this.settings.entitySuffix;\n    if (preffix) {\n      if (!name.startsWith(preffix)) {\n        return entity;\n      }\n      name = name.slice(preffix.length);\n    }\n    if (suffix) {\n      if (!name.endsWith(suffix)) {\n        return entity;\n      }\n      name = name.slice(0, -suffix.length);\n    }\n    return name;\n  }\n  isEntity(entity) {\n    const name = this.entityToName(entity);\n    return name !== entity;\n  }\n  getEntitiesFromUtterance(locale, utterance) {\n    if (!utterance) {\n      utterance = locale;\n      locale = 'es';\n    }\n    const tokens = utterance.split(/[\\s,.!?;:([\\]'\"¡¿)/]+/).filter(x => x);\n    const result = [];\n    for (let i = 0; i < tokens.length; i += 1) {\n      const token = tokens[i];\n      if (this.isEntity(token)) {\n        result.push(this.entityToName(token));\n      }\n    }\n    return result;\n  }\n  async generateEntityUtterance(locale, utterance) {\n    let input = {\n      locale,\n      utterance\n    };\n    input = await this.process(input);\n    const {\n      entities\n    } = input;\n    if (!entities || !entities.length) {\n      return utterance;\n    }\n    entities.sort((a, b) => a.start - b.start);\n    let index = 0;\n    let result = '';\n    for (let i = 0; i < entities.length; i += 1) {\n      const entity = entities[i];\n      const left = utterance.slice(index, entity.start);\n      index = entity.end + 1;\n      result += left;\n      result += this.nameToEntity(entity.entity);\n    }\n    const right = utterance.slice(entities[entities.length - 1].end + 1);\n    result += right;\n    return result;\n  }\n  toJSON() {\n    // easy RegExp serialization: https://stackoverflow.com/questions/12075927/serialization-of-regexp\n    // eslint-disable-next-line no-extend-native\n    RegExp.prototype.toJSON = RegExp.prototype.toString;\n    const result = {\n      settings: {\n        ...this.settings\n      },\n      rules: {\n        ...this.rules\n      }\n    };\n    delete result.settings.container;\n    return result;\n  }\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    const rulesKeys = Object.keys(json.rules);\n    rulesKeys.forEach(rKey => {\n      const entityKeys = Object.keys(json.rules[rKey]);\n      entityKeys.forEach(eKey => {\n        if (json.rules[rKey][eKey].type === 'regex') {\n          json.rules[rKey][eKey].rules = json.rules[rKey][eKey].rules.map(rule => Ner.str2regex(rule));\n        }\n      });\n    });\n    this.rules = json.rules;\n  }\n}\nmodule.exports = Ner;","map":{"version":3,"names":["Clonable","require","ExtractorEnum","ExtractorRegex","ExtractorTrim","ExtractorBuiltin","TrimType","isObject","obj","undefined","constructor","Object","Ner","settings","arguments","length","container","applySettings","tag","registerDefault","getConfiguration","rules","pipelineProcess","getPipeline","getRulesByName","locale","name","force","type","addRule","rule","Array","isArray","i","push","asString","item","JSON","stringify","toString","findRule","str","removeRule","index","splice","getRules","result","keys","decideRules","srcInput","input","nerRules","getRuleOption","option","addRuleOptionTexts","srcTexts","texts","ruleOption","dict","removeRuleOptionTexts","str2regex","lastIndexOf","RegExp","slice","regex2str","regex","addRegexRule","srcRegex","globalFlag","fixedRegex","flags","includes","source","addBetweenLastCondition","srcLeftWords","srcRightWords","srcOptions","options","closest","addBetweenCondition","leftWords","rightWords","conditions","j","leftWord","noSpaces","rightWord","join","caseSensitive","addPositionCondition","position","srcWords","words","addAfterCondition","opts","After","addAfterFirstCondition","AfterFirst","addAfterLastCondition","AfterLast","addBeforeCondition","Before","addBeforeFirstCondition","BeforeFirst","addBeforeLastCondition","BeforeLast","reduceEdges","entities","edges","defaultPipelineProcess","cache","extractEnum","get","extractRegex","extractTrim","extractBuiltin","use","output","run","process","threshold","pipeline","runPipeline","nameToEntity","preffix","entityPreffix","suffix","entitySuffix","entityToName","entity","startsWith","endsWith","isEntity","getEntitiesFromUtterance","utterance","tokens","split","filter","x","token","generateEntityUtterance","sort","a","b","start","left","end","right","toJSON","prototype","fromJSON","json","rulesKeys","forEach","rKey","entityKeys","eKey","map","module","exports"],"sources":["/home/sidahmed/Bureau/Cours_Master_1/S2/Web/Partie2/MoteurRecherche/moteur-rech/node_modules/@nlpjs/ner/src/ner.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable } = require('@nlpjs/core');\nconst ExtractorEnum = require('./extractor-enum');\nconst ExtractorRegex = require('./extractor-regex');\nconst ExtractorTrim = require('./extractor-trim');\nconst ExtractorBuiltin = require('./extractor-builtin');\n\nconst { TrimType } = require('./trim-types');\n\nfunction isObject(obj) {\n  return obj !== undefined && obj !== null && obj.constructor === Object;\n}\n\nclass Ner extends Clonable {\n  constructor(settings = {}, container = undefined) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    this.applySettings(this.settings);\n    if (!this.settings.tag) {\n      this.settings.tag = `ner`;\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.rules = {};\n    this.applySettings(this, {\n      pipelineProcess: this.getPipeline(`${this.settings.tag}-process`),\n    });\n  }\n\n  registerDefault() {}\n\n  getRulesByName(locale = '*', name = '', force = false) {\n    if (!this.rules[locale]) {\n      if (!force) {\n        return undefined;\n      }\n      this.rules[locale] = {};\n    }\n    if (!this.rules[locale][name]) {\n      if (!force) {\n        return undefined;\n      }\n      this.rules[locale][name] = {\n        name,\n        type: 'enum',\n        rules: [],\n      };\n    }\n    return this.rules[locale][name];\n  }\n\n  addRule(locale = '*', name, type, rule) {\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.addRule(locale[i], name, type, rule);\n      }\n    } else {\n      if (!this.rules[locale]) {\n        this.rules[locale] = {};\n      }\n      if (!this.rules[locale][name]) {\n        this.rules[locale][name] = {\n          name,\n          type,\n          rules: [],\n        };\n      }\n      this.rules[locale][name].rules.push(rule);\n    }\n  }\n\n  asString(item) {\n    if (item) {\n      if (isObject(item)) {\n        return JSON.stringify(item);\n      }\n      if (item.toString) {\n        return item.toString();\n      }\n    }\n    return '';\n  }\n\n  findRule(rules, rule) {\n    const str = this.asString(rule);\n    for (let i = 0; i < rules.length; i += 1) {\n      if (this.asString(rules[i]) === str) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  removeRule(locale = '*', name, rule) {\n    if (this.rules[locale]) {\n      if (this.rules[locale][name]) {\n        if (!rule) {\n          delete this.rules[locale][name];\n        } else {\n          const index = this.findRule(this.rules[locale][name].rules, rule);\n          if (index > -1) {\n            this.rules[locale][name].rules.splice(index, 1);\n          }\n        }\n      }\n    }\n  }\n\n  getRules(locale = '*') {\n    const result = [];\n    if (this.rules[locale]) {\n      const keys = Object.keys(this.rules[locale]);\n      for (let i = 0; i < keys.length; i += 1) {\n        result.push(this.rules[locale][keys[i]]);\n      }\n    }\n    if (locale !== '*' && this.rules['*']) {\n      const keys = Object.keys(this.rules['*']);\n      for (let i = 0; i < keys.length; i += 1) {\n        result.push(this.rules['*'][keys[i]]);\n      }\n    }\n    return result;\n  }\n\n  decideRules(srcInput) {\n    const input = srcInput;\n    input.nerRules = this.getRules(input.locale || 'en');\n    return input;\n  }\n\n  getRuleOption(rules, option) {\n    for (let i = 0; i < rules.length; i += 1) {\n      if (rules[i].option === option) {\n        return rules[i];\n      }\n    }\n    return undefined;\n  }\n\n  addRuleOptionTexts(locale, name, option, srcTexts) {\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.addRuleOptionTexts(locale[i], name, option, srcTexts);\n      }\n    } else {\n      let texts = srcTexts || option;\n      if (!Array.isArray(texts)) {\n        texts = [texts];\n      }\n      const rules = this.getRulesByName(locale, name, true);\n      let ruleOption = this.getRuleOption(rules.rules, option);\n      if (!ruleOption) {\n        ruleOption = {\n          option,\n          texts,\n        };\n        rules.rules.push(ruleOption);\n      } else {\n        const dict = {};\n        for (let i = 0; i < ruleOption.texts.length; i += 1) {\n          dict[ruleOption.texts[i]] = 1;\n        }\n        for (let i = 0; i < texts.length; i += 1) {\n          dict[texts[i]] = 1;\n        }\n        ruleOption.texts = Object.keys(dict);\n      }\n    }\n  }\n\n  removeRuleOptionTexts(locale, name, option, srcTexts) {\n    if (Array.isArray(locale)) {\n      for (let i = 0; i < locale.length; i += 1) {\n        this.removeRuleOptionTexts(locale[i], name, option, srcTexts);\n      }\n    } else {\n      let texts = srcTexts || option;\n      if (!Array.isArray(texts)) {\n        texts = [texts];\n      }\n      const rules = this.getRulesByName(locale, name, false);\n      if (rules) {\n        const ruleOption = this.getRuleOption(rules.rules, option);\n        if (ruleOption) {\n          const dict = {};\n          for (let i = 0; i < ruleOption.texts.length; i += 1) {\n            dict[ruleOption.texts[i]] = 1;\n          }\n          for (let i = 0; i < texts.length; i += 1) {\n            delete dict[texts[i]];\n          }\n          ruleOption.texts = Object.keys(dict);\n        }\n      }\n    }\n  }\n\n  static str2regex(str) {\n    const index = str.lastIndexOf('/');\n    return new RegExp(str.slice(1, index), str.slice(index + 1));\n  }\n\n  static regex2str(regex) {\n    return regex.toString();\n  }\n\n  addRegexRule(locale, name, srcRegex) {\n    const regex =\n      typeof srcRegex === 'string' ? Ner.str2regex(srcRegex) : srcRegex;\n    const globalFlag = 'g';\n    const fixedRegex = regex.flags.includes(globalFlag)\n      ? regex\n      : new RegExp(regex.source, `${regex.flags}${globalFlag}`);\n    this.addRule(locale, name, 'regex', fixedRegex);\n  }\n\n  addBetweenLastCondition(\n    locale,\n    name,\n    srcLeftWords,\n    srcRightWords,\n    srcOptions = {}\n  ) {\n    const options = {\n      ...srcOptions,\n      closest: true,\n    };\n    this.addBetweenCondition(\n      locale,\n      name,\n      srcLeftWords,\n      srcRightWords,\n      options\n    );\n  }\n\n  addBetweenCondition(locale, name, srcLeftWords, srcRightWords, srcOptions) {\n    const options = srcOptions || {};\n    const leftWords = Array.isArray(srcLeftWords)\n      ? srcLeftWords\n      : [srcLeftWords];\n    const rightWords = Array.isArray(srcRightWords)\n      ? srcRightWords\n      : [srcRightWords];\n    const conditions = [];\n    for (let i = 0; i < leftWords.length; i += 1) {\n      for (let j = 0; j < rightWords.length; j += 1) {\n        const leftWord =\n          options.noSpaces === true ? leftWords[i] : ` ${leftWords[i]} `;\n        const rightWord =\n          options.noSpaces === true ? rightWords[j] : ` ${rightWords[j]} `;\n        let regex;\n        if (options.closest === true) {\n          regex = `${leftWord}(?!.*${leftWord}.*)(.*)${rightWord}`;\n        } else {\n          regex = `(?<=${leftWord})(.*)(?=${rightWord})`;\n        }\n        conditions.push(regex);\n      }\n    }\n    let regex = `/${conditions.join('|')}/g`;\n    if (options.caseSensitive !== true) {\n      regex += 'i';\n    }\n    const rule = {\n      type: 'between',\n      leftWords,\n      rightWords,\n      regex: Ner.str2regex(regex),\n      options,\n    };\n    this.addRule(locale, name, 'trim', rule);\n  }\n\n  addPositionCondition(locale, name, position, srcWords, srcOptions) {\n    const options = srcOptions || {};\n    const words = Array.isArray(srcWords) ? srcWords : [srcWords];\n    const rule = {\n      type: position,\n      words,\n      options,\n    };\n    this.addRule(locale, name, 'trim', rule);\n  }\n\n  addAfterCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.After, words, opts);\n  }\n\n  addAfterFirstCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.AfterFirst, words, opts);\n  }\n\n  addAfterLastCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.AfterLast, words, opts);\n  }\n\n  addBeforeCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.Before, words, opts);\n  }\n\n  addBeforeFirstCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.BeforeFirst, words, opts);\n  }\n\n  addBeforeLastCondition(locale, name, words, opts) {\n    this.addPositionCondition(locale, name, TrimType.BeforeLast, words, opts);\n  }\n\n  reduceEdges(input) {\n    input.entities = input.edges;\n    delete input.edges;\n    delete input.nerRules;\n    return input;\n  }\n\n  async defaultPipelineProcess(input) {\n    if (!this.cache) {\n      this.cache = {\n        extractEnum: this.container.get('extract-enum'),\n        extractRegex: this.container.get('extract-regex'),\n        extractTrim: this.container.get('extract-trim'),\n        extractBuiltin: this.container.get('extract-builtin'),\n      };\n      if (!this.cache.extractEnum) {\n        this.container.use(ExtractorEnum);\n        this.cache.extractEnum = this.container.get('extract-enum');\n      }\n      if (!this.cache.extractRegex) {\n        this.container.use(ExtractorRegex);\n        this.cache.extractRegex = this.container.get('extract-regex');\n      }\n      if (!this.cache.extractTrim) {\n        this.container.use(ExtractorTrim);\n        this.cache.extractTrim = this.container.get('extract-trim');\n      }\n      if (!this.cache.extractBuiltin) {\n        this.container.use(ExtractorBuiltin);\n        this.cache.extractBuiltin = this.container.get('extract-builtin');\n      }\n    }\n    let output = await this.decideRules(input);\n    if (this.cache.extractEnum) {\n      output = await this.cache.extractEnum.run(output);\n    }\n    if (this.cache.extractRegex) {\n      output = await this.cache.extractRegex.run(output);\n    }\n    if (this.cache.extractTrim) {\n      output = await this.cache.extractTrim.run(output);\n    }\n    if (this.cache.extractBuiltin) {\n      output = await this.cache.extractBuiltin.run(output);\n    }\n    output = await this.reduceEdges(output);\n    return output;\n  }\n\n  async process(srcInput) {\n    const input = { threshold: this.settings.threshold || 0.8, ...srcInput };\n    let result;\n    if (input.locale) {\n      const pipeline = this.container.getPipeline(\n        `${this.settings.tag}-${input.locale}-process`\n      );\n      if (pipeline) {\n        result = await this.runPipeline(input, pipeline);\n      }\n    } else if (this.pipelineProcess) {\n      result = await this.runPipeline(input, this.pipelineProcess);\n    }\n    if (!result) {\n      result = await this.defaultPipelineProcess(input);\n    }\n    delete result.threshold;\n    return result;\n  }\n\n  nameToEntity(name) {\n    const preffix =\n      this.settings.entityPreffix === undefined\n        ? '@'\n        : this.settings.entityPreffix;\n    const suffix =\n      this.settings.entitySuffix === undefined\n        ? ''\n        : this.settings.entitySuffix;\n    return `${preffix}${name}${suffix}`;\n  }\n\n  entityToName(entity) {\n    if (!entity) {\n      return entity;\n    }\n    let name = entity;\n    const preffix =\n      this.settings.entityPreffix === undefined\n        ? '@'\n        : this.settings.entityPreffix;\n    const suffix =\n      this.settings.entitySuffix === undefined\n        ? ''\n        : this.settings.entitySuffix;\n    if (preffix) {\n      if (!name.startsWith(preffix)) {\n        return entity;\n      }\n      name = name.slice(preffix.length);\n    }\n    if (suffix) {\n      if (!name.endsWith(suffix)) {\n        return entity;\n      }\n      name = name.slice(0, -suffix.length);\n    }\n    return name;\n  }\n\n  isEntity(entity) {\n    const name = this.entityToName(entity);\n    return name !== entity;\n  }\n\n  getEntitiesFromUtterance(locale, utterance) {\n    if (!utterance) {\n      utterance = locale;\n      locale = 'es';\n    }\n    const tokens = utterance.split(/[\\s,.!?;:([\\]'\"¡¿)/]+/).filter((x) => x);\n    const result = [];\n    for (let i = 0; i < tokens.length; i += 1) {\n      const token = tokens[i];\n      if (this.isEntity(token)) {\n        result.push(this.entityToName(token));\n      }\n    }\n    return result;\n  }\n\n  async generateEntityUtterance(locale, utterance) {\n    let input = {\n      locale,\n      utterance,\n    };\n    input = await this.process(input);\n    const { entities } = input;\n    if (!entities || !entities.length) {\n      return utterance;\n    }\n    entities.sort((a, b) => a.start - b.start);\n    let index = 0;\n    let result = '';\n    for (let i = 0; i < entities.length; i += 1) {\n      const entity = entities[i];\n      const left = utterance.slice(index, entity.start);\n      index = entity.end + 1;\n      result += left;\n      result += this.nameToEntity(entity.entity);\n    }\n    const right = utterance.slice(entities[entities.length - 1].end + 1);\n    result += right;\n    return result;\n  }\n\n  toJSON() {\n    // easy RegExp serialization: https://stackoverflow.com/questions/12075927/serialization-of-regexp\n    // eslint-disable-next-line no-extend-native\n    RegExp.prototype.toJSON = RegExp.prototype.toString;\n\n    const result = {\n      settings: { ...this.settings },\n      rules: { ...this.rules },\n    };\n\n    delete result.settings.container;\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n\n    const rulesKeys = Object.keys(json.rules);\n\n    rulesKeys.forEach((rKey) => {\n      const entityKeys = Object.keys(json.rules[rKey]);\n\n      entityKeys.forEach((eKey) => {\n        if (json.rules[rKey][eKey].type === 'regex') {\n          json.rules[rKey][eKey].rules = json.rules[rKey][eKey].rules.map(\n            (rule) => Ner.str2regex(rule)\n          );\n        }\n      });\n    });\n\n    this.rules = json.rules;\n  }\n}\n\nmodule.exports = Ner;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}